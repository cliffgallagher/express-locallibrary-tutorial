{"version":3,"sources":["components/Popup.module.css","components/ElementPopupForUpdate.module.css","components/ListElement.module.css","components/ChosenElement.module.css","components/NewElementForm.module.css","components/NewElement.module.css","components/NavbarHeader.module.css","components/user_components/NewUserSignup.module.css","components/List.module.css","components/NavbarOptions.module.css","components/user_components/Login.module.css","App.module.css","components/book_components/BookList.js","context/auth-context.js","components/book_components/NewBookForm.js","components/book_components/DuplicateBookWarning.js","components/book_components/NewBook.js","components/book_components/BookInfo.js","components/book_components/BookPopupForDelete.js","components/book_components/BookPopupForUpdate.js","components/book_components/ChosenBook.js","components/book_components/BookListElement.js","components/book_components/BookComponent.js","components/author_components/NewAuthorForm.js","components/author_components/DuplicateAuthorWarning.js","components/author_components/NewAuthor.js","components/author_components/AuthorList.js","components/author_components/AuthorInfo.js","components/author_components/AuthorPopupForUpdate.js","components/author_components/AuthorPopupForDelete.js","components/author_components/ChosenAuthor.js","components/author_components/AuthorListElement.js","components/author_components/AuthorComponent.js","components/genre_components/NewGenreForm.js","components/genre_components/DuplicateGenreForm.js","components/genre_components/NewGenre.js","components/genre_components/GenreList.js","components/genre_components/GenreInfo.js","components/genre_components/GenrePopupForUpdate.js","components/genre_components/GenrePopupForDelete.js","components/genre_components/ChosenGenre.js","components/genre_components/GenreListItem.js","components/genre_components/GenreComponent.js","components/NavbarHeader.js","components/NavbarOptions.js","components/user_components/Login.js","components/user_components/NewUserSignup.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","BookList","props","className","styles","ulGrid","bookArray","AuthContext","createContext","NewBookForm","useState","value","authorOptions","setAuthorOptions","genreOptions","setGenreOptions","titleInput","setTitleInput","isbnInput","setISBNInput","summaryInput","setSummaryInput","authorInput","setAuthorInput","genreInput","setGenreInput","validationErrors","setValidationErrors","auth","useContext","getAuthorsFromDatabase","a","fetch","headers","token","authorsResponse","json","authorObjectArray","name","setIsLoggedIn","prevState","map","element","author_id","family_name","first_name","getGenresFromDatabase","genresResponse","genreObjectArray","genre_id","event","preventDefault","userInputData","title","escapedTitle","replaceAll","summary","isbn","newBookInfoToNewBook","insertBook","method","body","JSON","stringify","response","data","hasOwnProperty","errorMessages","errors","msg","includes","isAddingDuplicate","getBookListNewBookToBookForm","onCancel","useEffect","id","newElementForm","onSubmit","type","onChange","target","newBookSummaryLabel","newBookSummaryInput","rows","cols","buttonDiv","onClick","DuplicateBookWarning","console","log","newBookInfo","isNotAddingDuplicate","setIsAddingNewBook","popup","popup_inner","button_div","right_most_button","NewBook","isAddingNewBook","addingDuplicate","setAddingDuplicate","setNewBookInfo","addElementButtonContainer","addElementButton","getBookListMyComponentNewToNewBook","BookInfo","author","genreName","BookPopupForDelete","titleToDelete","setTitleToDelete","isbnToDelete","setISBNToDelete","authorToDelete","setAuthorToDelete","bookID","bodyOfResponse","bookIDAsObject","bookIDattribute","setDisplayElementPopupForDelete","setDisplayElement","getBookList","fetchDeleteBookInfo","popup_for_delete","BookPopupForUpdate","updateFormAuthorOptions","setUpdateFormAuthorOptions","updateFormGenreOptions","setUpdateFormGenreOptions","updateFormTitleInput","setUpdateFormTitleInput","updateFormISBNInput","setUpdateFormISBNInput","updateFormSummaryInput","setUpdateFormSummaryInput","updateFormAuthorInput","setUpdateFormAuthorInput","updateFormGenreInput","setUpdateFormGenreInput","displayDuplicateWarning","setDisplayDuplicateWarning","initialTitle","setInitialTitle","fetchBook","updateBookWithTitleCheck","updatedBookInfo","setDisplayElementPopupForUpdate","setHideElement","updateBookNoTitleCheck","authorID","genreID","popupInner","summary_input","ChosenBook","displayElementPopupForUpdate","displayElementPopupForDelete","setTimeout","chosen_element_popup","chosen_element_popup_inner","BookListElement","hideElement","displayElement","gridOrder","setGridOrder","searchText","length","searchTextToLowerCase","toLowerCase","searchForSearchText","listElement","updateBookButtonClickHandler","setDisplayBookPopupForUpdate","bookPropsFromBookListElementToBookComponent","BookComponent","setBookArray","setDisplayBookPopupForDelete","setbookIDForBookPopupForUpdate","setAuthorIDForBookPopupForUpdate","setGenreIDForBookPopupForUpdate","book_id","content","NewAuthorForm","newAuthorFirstName","setNewAuthorFirstName","newAuthorFamilyName","setNewAuthorFamilyName","newAuthorBirthDate","setNewAuthorBirthDate","newAuthorDeathDate","setNewAuthorDeathDate","newAuthorFormInfo","dateOfBirth","escaped_first_name","escaped_family_name","dateOfDeath","passNewAuthorInfo","showDuplicateAuthorWarning","getAuthorList","hideNewAuthorForm","DuplicateAuthorWarning","newAuthorInfoForWarning","hideDuplicateAuthorWarning","NewAuthor","isAddingNewAuthor","setIsAddingNewAuthor","addingDuplicateAuthor","setAddingDuplicateAuthor","newAuthorInfoState","setNewAuthorInfoState","newAuthorInfo","AuthorList","authorArray","AuthorInfo","familyName","firstName","slice","AuthorPopupForUpdate","authorUpdateFormFirstNameValue","setAuthorUpdateFormFirstNameValue","authorUpdateFormFamilyNameValue","setAuthorUpdateFormFamilyNameValue","authorUpdateFormBirthValue","setAuthorUpdateFormBirthValue","authorUpdateFormDeathValue","setAuthorUpdateFormDeathValue","initialFirstName","setInitialFirstName","initialLastName","setInitialLastName","date_of_birth","date_of_death","updateAuthorNameCheck","updatedAuthorData","setDisplayAuthorPopupForUpdate","setDisplayChosenElement","setHideChosenElement","updateAuthorNoNameCheck","birthDate","deathDate","getInitialValues","AuthorPopupForDelete","authorNameOnDeleteForm","setAuthorNameOnDeleteForm","authorBirthDateOnDeleteForm","setAuthorBirthDateOnDeleteForm","authorDeathDateOnDeleteForm","setAuthorDeathDateOnDeleteForm","receivedForeignKeyConstraintError","setReceivedForeignKeyConstraintError","ChosenAuthor","authorIDForPopupForUpdate","AuthorListElement","hideChosenElement","displayChosenElement","searchableBirthDate","authorFullName","authorLastNameCommaFirst","authorLastNameFirst","AuthorComponent","setDisplayAuthors","setAuthorArray","setAuthorIDForPopupForUpdate","setDisplayAuthorPopupForDelete","authorInfoToAuthorComponent","NewGenreForm","newGenreFormNameValue","setNewGenreFormValue","newGenreFormSubmitHandler","escapedGenreName","sendGenreNameUp","setAddNewGenre","setAddingDuplicateGenre","getGenreList","DuplicateGenreForm","duplicateGenreName","NewGenre","addNewGenre","addingDuplicateGenre","setDuplicateGenreName","GenreList","genreArray","GenreInfo","GenrePopupForUpdate","genreUpdateFormNameValue","setGenreUpdateFormNameValue","updatedGenreNameAlreadyExists","setUpdatedGenreNameAlreadyExists","getInitialGenreValues","GenrePopupForDelete","genreToDelete","setGenreToDelete","getGenreDeleteFormValues","ChosenGenre","GenreListItem","GenreComponent","setGenreArray","displayGenrePopupForUpdate","setDisplayGenrePopupForUpdate","genreIDInPopups","setGenreIDInPopups","displayGenrePopupForDelete","setDisplayGenrePopupForDelete","receiveGenreID","NavbarHeader","showSearchBar","setShowSearchBar","navbarHeader","fabars","size","setDisplayNavbar","searchDiv","searchDiv_form_input","show_search_bar","setSearchText","fasearchIcon","NavbarOptions","navbar","displayNavbar","closeXButton","displayBookComponentFunction","displayAuthorComponentFunction","displayGenreComponentFunction","bottom_div","Login","loginUsername","setLoginUsername","loginPassword","setLoginPassword","areValidationErrors","setAreValidationErrors","loginInfo","escapedUsername","sendLoggedInUserToApp","form","setIsNewUser","NewUserSignup","newUserFirstName","setNewUserFirstName","newUserLastName","setNewUserLastName","newUserEmail","setNewUserEmail","newUserUsername","setNewUserUsername","newUserPassword","setNewUserPassword","newUserConfirmedPassword","setNewUserConfirmedPassword","successfulSignup","setSuccessfulSignup","passwordState","setPasswordState","newUserInfo","replacedNewUserFirstName","replacedNewUserLastName","replacedNewUserEmail","replacedNewUserUsername","indexOf","pop","push","show_password_checkbox","for","App","displayBookComponent","setDisplayBookComponent","displayAuthorComponent","setDisplayAuthorComponent","displayGenreComponent","setDisplayGenreComponent","isNewUser","isLoggedIn","displayUserInfoComponent","setDisplayUserInfoComponent","setToken","checkForTokenInCookies","appClass","accessToken","Provider","displayUserInfoComponentFunction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c5d2080.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__JHpaf\",\"popup_inner\":\"Popup_popup_inner__3TRG6\",\"button_div\":\"Popup_button_div__3EMjM\",\"right_most_button\":\"Popup_right_most_button__LdIE4\",\"popup_for_delete\":\"Popup_popup_for_delete__17l25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"ElementPopupForUpdate_popup__1HVL0\",\"popupInner\":\"ElementPopupForUpdate_popupInner__1R4Xz\",\"button_div\":\"ElementPopupForUpdate_button_div__jCXET\",\"right_most_button\":\"ElementPopupForUpdate_right_most_button__1umR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listElement\":\"ListElement_listElement__GdXgt\",\"hideElement\":\"ListElement_hideElement__e3u6M\",\"gridOrder\":\"ListElement_gridOrder__3QNgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chosen_element_popup\":\"ChosenElement_chosen_element_popup__QVrpQ\",\"chosen_element_popup_inner\":\"ChosenElement_chosen_element_popup_inner__2JnSV\",\"button_div\":\"ChosenElement_button_div__2VNSr\",\"right_most_button\":\"ChosenElement_right_most_button__1Wbnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newElementForm\":\"NewElementForm_newElementForm__3y0ey\",\"newBookSummaryLabel\":\"NewElementForm_newBookSummaryLabel__1m1Fv\",\"newBookSummaryInput\":\"NewElementForm_newBookSummaryInput__39OcQ\",\"buttonDiv\":\"NewElementForm_buttonDiv__3yz50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addElementButtonContainer\":\"NewElement_addElementButtonContainer__iFzQn\",\"addElementButton\":\"NewElement_addElementButton__KxBWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarHeader\":\"NavbarHeader_navbarHeader__1AM8y\",\"fabars\":\"NavbarHeader_fabars__2bvym\",\"searchDiv\":\"NavbarHeader_searchDiv__1CzYk\",\"searchDiv_form_input\":\"NavbarHeader_searchDiv_form_input__1Ns7w\",\"show_search_bar\":\"NavbarHeader_show_search_bar__3kPMC\",\"fasearchIcon\":\"NavbarHeader_fasearchIcon__1tdzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"NewUserSignup_popup__fO7HL\",\"popup_inner\":\"NewUserSignup_popup_inner__2dFTB\",\"button_div\":\"NewUserSignup_button_div__2WyXu\",\"show_password_checkbox\":\"NewUserSignup_show_password_checkbox__3rTBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ulGrid\":\"List_ulGrid__38zOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavbarOptions_navbar__3xEI_\",\"displayNavbar\":\"NavbarOptions_displayNavbar__1gNAK\",\"closeXButton\":\"NavbarOptions_closeXButton__1TVvj\",\"bottom_div\":\"NavbarOptions_bottom_div__1zq4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Login_popup__2JlJy\",\"popup_inner\":\"Login_popup_inner__38elY\",\"button_div\":\"Login_button_div__1reuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appClass\":\"App_appClass__2k5S6\"};","import React from 'react';\r\nimport styles from '../List.module.css';\r\n\r\nconst BookList = (props) => {\r\n\r\n    return (\r\n        <div data-cy='booklist'>\r\n            <ul className={styles.ulGrid}>{props.bookArray}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import {createContext} from 'react';\r\n\r\nexport const AuthContext = createContext();","import React, { useEffect, useState, useContext } from 'react';\r\nimport styles from \"../NewElementForm.module.css\";\r\nimport {AuthContext} from '../../context/auth-context';\r\n\r\nconst NewBookForm = (props) => {\r\n    const [authorOptions, setAuthorOptions] = useState([<option key='0' value='0'>Select Author</option>]);\r\n    const [genreOptions, setGenreOptions] = useState([<option key='0' value='0'>Select Genre</option>]);\r\n    const [titleInput, setTitleInput] = useState(\"\");\r\n    const [isbnInput, setISBNInput] = useState(\"\");\r\n    const [summaryInput, setSummaryInput] = useState(\"\");\r\n    const [authorInput, setAuthorInput] = useState();\r\n    const [genreInput, setGenreInput] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const getAuthorsFromDatabase = async () => {\r\n        const authorsResponse = await fetch('/catalog/authors', {\r\n            headers: {\r\n                'Authorization': `Bearer ${auth.token}`\r\n            }\r\n        });\r\n        const authorObjectArray = await authorsResponse.json();\r\n        if (typeof authorObjectArray === 'object') {\r\n            if (authorObjectArray.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n        setAuthorOptions((prevState) => {\r\n            return [...prevState, authorObjectArray.map(element => <option key={element.author_id} value={element.author_id}>{element.family_name + \", \" + element.first_name}</option>)];\r\n        })     \r\n    }\r\n\r\n    const getGenresFromDatabase = async () => {\r\n        const genresResponse = await fetch('/catalog/genres', {\r\n            headers: {\r\n                'Authorization': `Bearer ${auth.token}`\r\n            }\r\n        });\r\n        const genreObjectArray = await genresResponse.json();\r\n        if (typeof genreObjectArray === 'object') {\r\n            if (genreObjectArray.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n        setGenreOptions((prevState) => {\r\n            return [...prevState, genreObjectArray.map(element => <option key={element.genre_id} value={element.genre_id}>{element.name}</option>)];\r\n        })   \r\n    }\r\n\r\n    useEffect(() => {\r\n        getAuthorsFromDatabase();\r\n        getGenresFromDatabase();\r\n    }, [])\r\n    \r\n\r\n    async function bookFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const userInputData = {\r\n            title: titleInput,\r\n            escapedTitle: titleInput.replaceAll('\\'', '\\\\\\''),\r\n            author_id: authorInput,\r\n            summary: summaryInput.replaceAll('\\'', '\\\\\\''),\r\n            isbn: isbnInput,\r\n            genre_id: genreInput\r\n        }\r\n\r\n        props.newBookInfoToNewBook(userInputData);\r\n        \r\n        const insertBook = async () => {\r\n            const response = await fetch('catalog/book/create/one', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                },\r\n                body: JSON.stringify(userInputData)\r\n            });\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n\r\n        const data = await insertBook();\r\n\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n            if (data.hasOwnProperty('errors')) {\r\n                const errorMessages = data.errors.map(element => element.msg);\r\n                if (errorMessages.includes(\"title already in database\")) {\r\n                    props.isAddingDuplicate();\r\n                } else {\r\n                    setValidationErrors(() => {\r\n                        return errorMessages.map(element => <li>{element}</li>);\r\n                    });\r\n                }\r\n            } else {\r\n                props.getBookListNewBookToBookForm();\r\n                props.onCancel();\r\n            }\r\n        }\r\n    }\r\n\r\n    function titleInputChangeHandler(event) {\r\n        setTitleInput(event.target.value);\r\n\r\n    }\r\n\r\n    function isbnInputChangeHandler(event) {\r\n        setISBNInput(event.target.value);\r\n    }\r\n\r\n    function summaryInputChangeHandler(event) {\r\n        setSummaryInput(event.target.value);\r\n    }\r\n\r\n    function authorInputChangeHandler(event) {\r\n        setAuthorInput(event.target.value);\r\n    }\r\n\r\n    function genreInputChangeHandler(event) {\r\n        setGenreInput(event.target.value);\r\n    }\r\n    \r\n    return <form id={styles.newElementForm} onSubmit={bookFormSubmitHandler} data-cy='new_book_form'>\r\n            <ul>{validationErrors}</ul>\r\n            <label>Title<input type='text' name='titleField' value={titleInput} onChange={titleInputChangeHandler} /></label>\r\n            <label>ISBN<input type='text' name='isbnField' value={isbnInput} onChange={isbnInputChangeHandler}/></label>\r\n            <label id={styles.newBookSummaryLabel}>Summary<textarea id={styles.newBookSummaryInput} name='summaryField' value={summaryInput} rows=\"5\" cols=\"25\" onChange={summaryInputChangeHandler}/></label>\r\n            <label>Author<select name='authors' value ={authorInput} onChange={authorInputChangeHandler}>{authorOptions}</select></label>\r\n            <label>Genre<select name='genres' value={genreInput} onChange={genreInputChangeHandler}>{genreOptions}</select></label>\r\n            <div id={styles.buttonDiv}>\r\n                <button type='submit'>Submit</button>\r\n                <button onClick={props.onCancel}>Cancel</button>\r\n            </div>\r\n\r\n        </form>\r\n}\r\n\r\nexport default NewBookForm;","import React, { useContext } from 'react';\r\nimport styles from '../Popup.module.css';\r\nimport {AuthContext} from '../../context/auth-context';\r\n\r\nconst DuplicateBookWarning = (props) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function duplicateBookWarningSubmitHandler(event) {\r\n        event.preventDefault();\r\n        console.log('props.newbookinfo: ' + JSON.stringify(props.newBookInfo));\r\n        const response = await fetch('catalog/book/create/two', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            },\r\n            body: JSON.stringify(props.newBookInfo)\r\n        });\r\n        const data = response.json();\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n        props.isNotAddingDuplicate();\r\n        props.getBookListNewBookToBookForm();\r\n        props.setIsAddingNewBook(false);\r\n    }\r\n\r\n    function duplicateBookWarningCloseHandler() {\r\n        props.isNotAddingDuplicate();\r\n        props.setIsAddingNewBook(false);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.popup} data-cy='duplicate_book_warning'>\r\n            <div className={styles.popup_inner}>\r\n                <form onSubmit={duplicateBookWarningSubmitHandler}>\r\n                    <p>A book with title '{props.newBookInfo.title}' already exists in the database. Insert anyway?</p>\r\n                    <div id={styles.button_div}>\r\n                        <button type=\"submit\">Yes</button>\r\n                        <button id={styles.right_most_button} onClick={duplicateBookWarningCloseHandler}>No</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuplicateBookWarning;","import React, { useState } from 'react';\r\nimport NewBookForm from './NewBookForm';\r\nimport DuplicateBookWarning from './DuplicateBookWarning';\r\nimport styles from '../NewElement.module.css';\r\n\r\nconst NewBook = (props) => {\r\n    const [isAddingNewBook, setIsAddingNewBook] = useState(false);\r\n    const [addingDuplicate, setAddingDuplicate] = useState(false);\r\n    const [newBookInfo, setNewBookInfo] = useState();\r\n    \r\n    function newBookButtonHandler(event) {\r\n        setIsAddingNewBook(true);\r\n    }\r\n\r\n    function newBookCancelHandler() {\r\n        setIsAddingNewBook(false);\r\n    }\r\n\r\n    function isAddingDuplicate() {\r\n        setAddingDuplicate(true);\r\n    }\r\n\r\n    function isNotAddingDuplicate() {\r\n        setAddingDuplicate(false);\r\n    }\r\n\r\n    function newBookInfoToNewBook(newBookInfo) {\r\n\r\n        const {title, escapedTitle, author_id, summary, isbn, genre_id} = newBookInfo;\r\n        const objectForDuplicateWarning = {\r\n            title: title,\r\n            escapedTitle: escapedTitle,\r\n            author_id: author_id,\r\n            summary: summary,\r\n            isbn: isbn,\r\n            genre_id: genre_id\r\n        }\r\n        setNewBookInfo(objectForDuplicateWarning);\r\n    }\r\n\r\n    return <div>\r\n        {!isAddingNewBook && <div id={styles.addElementButtonContainer}><button id={styles.addElementButton} onClick={newBookButtonHandler}>Add New Book</button></div>}\r\n        {isAddingNewBook && (\r\n            <NewBookForm onCancel={newBookCancelHandler} getBookListNewBookToBookForm={props.getBookListMyComponentNewToNewBook} isAddingDuplicate={isAddingDuplicate} newBookInfoToNewBook={newBookInfoToNewBook}/>\r\n        )}\r\n        {addingDuplicate && (\r\n            <div>\r\n                <DuplicateBookWarning newBookInfo={newBookInfo} isNotAddingDuplicate={isNotAddingDuplicate} getBookListNewBookToBookForm={props.getBookListMyComponentNewToNewBook} setIsAddingNewBook={setIsAddingNewBook}/>\r\n            </div>\r\n        )}\r\n    </div>;\r\n}\r\n\r\nexport default NewBook;","import React from 'react';\r\nimport styles from '../ElementInfo.module.css';\r\n\r\nconst BookInfo = (props) => {\r\n    return (\r\n        <div data-cy='book_info'>\r\n            <p data-cy='book_info_title'>Title: {props.title}</p>\r\n            <p data-cy='book_info_author'>Author: {props.author}</p>\r\n            <p data-cy='book_info_isbn'>ISBN: {props.isbn}</p>\r\n            <p data-cy='book_info_genre'>Genre: {props.genreName}</p>\r\n            <p data-cy='book_info_summary'>Summary: {props.summary}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookInfo;","import React, { useEffect, useState, useContext } from 'react';\r\nimport styles from '../Popup.module.css';\r\nimport {AuthContext} from '../../context/auth-context';\r\n\r\nconst BookPopupForDelete = (props) => {\r\n    const [titleToDelete, setTitleToDelete] = useState(\"\");\r\n    const [isbnToDelete, setISBNToDelete] = useState(\"\");\r\n    const [authorToDelete, setAuthorToDelete] = useState(\"\");\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function fetchDeleteBookInfo() {\r\n        try {\r\n            const response = await fetch(`catalog/book/${props.bookID}/delete`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const bodyOfResponse = await response.json();\r\n            if (typeof bodyOfResponse === 'object') {\r\n                if (bodyOfResponse.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setTitleToDelete(bodyOfResponse[0].title);\r\n            setISBNToDelete(bodyOfResponse[0].isbn);\r\n            setAuthorToDelete(`${bodyOfResponse[0].first_name} ${bodyOfResponse[0].family_name}`);\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDeleteBookInfo();\r\n    }, []);\r\n\r\n    function popupForDeleteCloseButtonHandler() {\r\n        props.setDisplayElementPopupForDelete(false);\r\n    }\r\n\r\n    async function deleteBookHandler(event) {\r\n        event.preventDefault();\r\n        const bookIDAsObject = {\r\n            bookIDattribute: props.bookID\r\n        };\r\n        const response = await fetch(`catalog/book/${props.bookID}/delete`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            },\r\n            body: JSON.stringify(bookIDAsObject)\r\n        });\r\n        props.setDisplayElementPopupForDelete(false);\r\n        props.setDisplayElement(false);\r\n        props.getBookList();        \r\n\r\n        return response;\r\n    }\r\n\r\n    return <div className={styles.popup}>\r\n        <div className={styles.popup_inner}>\r\n            <form onSubmit={deleteBookHandler} id={styles.popup_for_delete} data-cy='book_popup_for_delete'>\r\n                <h2>Are you sure you want to delete this book?</h2>\r\n                <h3>Title: {titleToDelete}</h3>\r\n                <h3>Author: {authorToDelete}</h3>\r\n                <h3>ISBN: {isbnToDelete}</h3>\r\n                <div id={styles.button_div}>\r\n                    <button type=\"submit\">Delete</button><button id={styles.right_most_button} onClick={popupForDeleteCloseButtonHandler}>Close</button>\r\n                </div>   \r\n            </form>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default BookPopupForDelete;","import React, { useEffect, useState, useContext } from 'react';\r\nimport styles from '../ElementPopupForUpdate.module.css';\r\nimport {AuthContext} from '../../context/auth-context';\r\n\r\nconst BookPopupForUpdate = (props) => {\r\n    const [updateFormAuthorOptions, setUpdateFormAuthorOptions] = useState([]);\r\n    const [updateFormGenreOptions, setUpdateFormGenreOptions] = useState([])\r\n    const [updateFormTitleInput, setUpdateFormTitleInput] = useState();\r\n    const [updateFormISBNInput, setUpdateFormISBNInput] = useState();\r\n    const [updateFormSummaryInput, setUpdateFormSummaryInput] = useState();\r\n    const [updateFormAuthorInput, setUpdateFormAuthorInput] = useState();\r\n    const [updateFormGenreInput, setUpdateFormGenreInput] = useState();\r\n    const [displayDuplicateWarning, setDisplayDuplicateWarning] = useState(false);\r\n    const [initialTitle, setInitialTitle] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const getAuthorsFromDatabase = async () => {\r\n        try {\r\n            const authorsResponse = await fetch('/catalog/authors', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const authorObjectArray = await authorsResponse.json();\r\n            if (typeof authorObjectArray === 'object') {\r\n                if (authorObjectArray.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setUpdateFormAuthorOptions(() => {\r\n                return [authorObjectArray.map(element => <option key={element.author_id} value={element.author_id}>{element.family_name + \", \" + element.first_name}</option>)];\r\n            }); \r\n        } catch(e) {\r\n            //console.log(e);\r\n        }     \r\n    }\r\n\r\n    const getGenresFromDatabase = async () => {\r\n        const genresResponse = await fetch('/catalog/genres', {\r\n            headers: {\r\n                'Authorization': `Bearer ${auth.token}`\r\n            }\r\n        });\r\n        const genreObjectArray = await genresResponse.json();\r\n        if (typeof genreObjectArray === 'object') {\r\n            if (genreObjectArray.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n        setUpdateFormGenreOptions(() => {\r\n            return [genreObjectArray.map(element => <option key={element.genre_id} value={element.genre_id}>{element.name}</option>)];\r\n        })   \r\n    }\r\n    \r\n    async function fetchBook() {\r\n        try {\r\n            const response = await fetch(`catalog/book/${props.bookID}/update`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const bodyOfResponse = await response.json();\r\n            if (typeof bodyOfResponse === 'object') {\r\n                if (bodyOfResponse.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setUpdateFormTitleInput(bodyOfResponse[0].title);\r\n            setUpdateFormISBNInput(bodyOfResponse[0].isbn);\r\n            setUpdateFormSummaryInput(bodyOfResponse[0].summary);\r\n            setInitialTitle(bodyOfResponse[0].title);\r\n            \r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    const updateBookWithTitleCheck = async (updatedBookInfo) => {\r\n        //console.log('in title check: ' + JSON.stringify(updatedBookInfo));\r\n        const response = await fetch(`catalog/book/${props.bookID}/update/one`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            },\r\n            body: JSON.stringify(updatedBookInfo)\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n            if (data.hasOwnProperty('errors')) {\r\n                const errorMessages = data.errors.map(element => element.msg);\r\n                if (errorMessages.includes(\"title already in database\")) {\r\n                    setDisplayDuplicateWarning(true);\r\n                } else {\r\n                    setValidationErrors(() => {\r\n                        return errorMessages.map(element => <li>{element}</li>);\r\n                    });\r\n                }\r\n            } else {\r\n                props.getBookList();\r\n                props.setDisplayElementPopupForUpdate(false);\r\n                props.setDisplayElement(false);\r\n                props.setHideElement(false);\r\n\r\n                return response;\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateBookNoTitleCheck = async (updatedBookInfo) => {\r\n        const response = await fetch(`catalog/book/${props.bookID}/update/two`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            },\r\n            body: JSON.stringify(updatedBookInfo)\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n            if (data.hasOwnProperty('errors')) {\r\n                const errorMessages = data.errors.map(element => element.msg);\r\n                setValidationErrors(() => {\r\n                        return errorMessages.map(element => <li>{element}</li>);\r\n                });\r\n            } else {\r\n                props.getBookList();\r\n                props.setDisplayElementPopupForUpdate(false);\r\n                props.setDisplayElement(false);\r\n                props.setHideElement(false);\r\n            }\r\n        }   \r\n    }\r\n\r\n    useEffect(async () => {\r\n        fetchBook();\r\n        await getAuthorsFromDatabase();\r\n        setUpdateFormAuthorInput(props.authorID);\r\n        await getGenresFromDatabase();\r\n        setUpdateFormGenreInput(props.genreID);\r\n\r\n    }, []);\r\n\r\n    async function popupForUpdateSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedBookInfo = {\r\n            title: updateFormTitleInput,\r\n            escapedTitle: updateFormTitleInput.replaceAll('\\'', '\\\\\\''),\r\n            authorID: updateFormAuthorInput,\r\n            isbn: updateFormISBNInput,\r\n            genreID: updateFormGenreInput,\r\n            summary: updateFormSummaryInput.replaceAll('\\'', '\\\\\\'')\r\n        }\r\n        //console.log('updatedBookInfo: ' + JSON.stringify(updatedBookInfo))\r\n        if (initialTitle === updatedBookInfo.title) {\r\n            updateBookNoTitleCheck(updatedBookInfo);\r\n        } else {\r\n            updateBookWithTitleCheck(updatedBookInfo);\r\n        }\r\n    }\r\n    \r\n    function updateFormTitleInputChangeHandler(event) {\r\n        setUpdateFormTitleInput(event.target.value);\r\n    }\r\n\r\n    function updateFormAuthorInputChangeHandler(event) {\r\n        setUpdateFormAuthorInput(event.target.value);\r\n    }\r\n\r\n    function updateFormISBNInputChangeHandler(event) {\r\n        setUpdateFormISBNInput(event.target.value);\r\n    }\r\n\r\n    function updateFormGenreInputChangeHandler(event) {\r\n        setUpdateFormGenreInput(event.target.value);\r\n    }\r\n\r\n    function updateFormSummaryInputChangeHandler(event) {\r\n        setUpdateFormSummaryInput(event.target.value);\r\n    }\r\n\r\n    function popupForUpdateCloseButtonHandler(event) {\r\n        props.setDisplayElementPopupForUpdate(false);\r\n    }\r\n\r\n    function duplicateTitleUpdateWarningSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedBookInfo = {\r\n            title: updateFormTitleInput,\r\n            escapedTitle: updateFormTitleInput.replaceAll('\\'', '\\\\\\''),\r\n            authorID: updateFormAuthorInput,\r\n            isbn: updateFormISBNInput,\r\n            genreID: updateFormGenreInput,\r\n            summary: updateFormSummaryInput\r\n        }\r\n        updateBookNoTitleCheck(updatedBookInfo);\r\n    }\r\n\r\n    function duplicateWarningCancelButtonHandler() {\r\n        setDisplayDuplicateWarning(false);\r\n        props.setDisplayElementPopupForUpdate(false);\r\n    }\r\n\r\n    return <div className={styles.popup}>\r\n        <div data-cy='book_popup_for_update'>\r\n            {!displayDuplicateWarning && <form className={styles.popupInner} onSubmit={popupForUpdateSubmitHandler}>\r\n                <ul>{validationErrors}</ul>\r\n                <label>Title<input type='text' name='updateFormTitleField' value={updateFormTitleInput} onChange={updateFormTitleInputChangeHandler} data-cy='book_update_title_field'/></label>\r\n                <label>Author<select name='updateFormAuthorField' value={updateFormAuthorInput} onChange={updateFormAuthorInputChangeHandler} data-cy='book_update_author_field'>{updateFormAuthorOptions}</select></label>\r\n                <label>ISBN<input type='text' name='updateFormISBNField' value={updateFormISBNInput} onChange={updateFormISBNInputChangeHandler} data-cy='book_update_isbn_field'/></label>\r\n                <label>Genre<select name='updateFormGenreField' value={updateFormGenreInput} onChange={updateFormGenreInputChangeHandler} data-cy='book_update_genre_field'>{updateFormGenreOptions}</select></label>\r\n                <label>Summary<textarea id={styles.summary_input} name='updateFormSummaryField' value={updateFormSummaryInput} rows=\"5\" cols=\"25\" onChange={updateFormSummaryInputChangeHandler} data-cy='book_update_summary_field'></textarea></label>\r\n                <div id={styles.button_div}>\r\n                    <button type=\"submit\">Update Book</button>\r\n                    <button className='close-button' onClick={popupForUpdateCloseButtonHandler} id={styles.right_most_button}>Close</button>\r\n                </div>\r\n            </form>}\r\n            {displayDuplicateWarning && (\r\n                <form className={styles.popupInner} onSubmit={duplicateTitleUpdateWarningSubmitHandler}>\r\n                    <p>A book with the title {updateFormTitleInput} already exists in the database. Are you sure you want to update this book to have that title?</p>\r\n                    <div id={styles.button_div}>\r\n                        <button type='submit'>Update</button>\r\n                        <button id={styles.right_most_button} onClick={duplicateWarningCancelButtonHandler}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default BookPopupForUpdate;","import React, { useState } from \"react\";\r\nimport styles from '../ChosenElement.module.css';\r\nimport BookInfo from \"./BookInfo\";\r\nimport BookPopupForDelete from \"./BookPopupForDelete\";\r\nimport BookPopupForUpdate from \"./BookPopupForUpdate\";\r\n\r\nconst ChosenBook = (props) => {\r\n    const [displayElementPopupForUpdate, setDisplayElementPopupForUpdate] = useState(false);\r\n    const [displayElementPopupForDelete, setDisplayElementPopupForDelete] = useState(false);\r\n\r\n    function updateBookButtonClickHandler() {\r\n        setDisplayElementPopupForUpdate(true);\r\n    }\r\n\r\n    async function chosenElementCancelHandler() {\r\n        setTimeout(() => {\r\n            props.setDisplayElement(false);\r\n            props.setHideElement(false);\r\n        }, 50);\r\n    }\r\n\r\n    function deleteBookButtonClickHandler() {\r\n        setDisplayElementPopupForDelete(true);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {!displayElementPopupForUpdate && !displayElementPopupForDelete && (\r\n                <div className={styles.chosen_element_popup}>\r\n                <div className={styles.chosen_element_popup_inner} data-cy='chosen_book'>\r\n                    <BookInfo title={props.title} author={props.author} isbn={props.isbn} genreName={props.genreName} summary={props.summary}/>\r\n                    <div id={styles.button_div}>\r\n                        <button onClick={updateBookButtonClickHandler}>Update</button>\r\n                        <button onClick={deleteBookButtonClickHandler}>Delete</button>\r\n                        <button onClick={chosenElementCancelHandler} >Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n            {displayElementPopupForUpdate && (\r\n                <div>\r\n                    <BookPopupForUpdate bookID={props.bookID} authorID={props.authorID} genreID={props.genreID} setDisplayElementPopupForUpdate={setDisplayElementPopupForUpdate} getBookList={props.getBookList} setDisplayElement={props.setDisplayElement} setHideElement={props.setHideElement}/>\r\n                </div>\r\n            )}\r\n            {displayElementPopupForDelete && (\r\n                <div>\r\n                    <BookPopupForDelete bookID={props.bookID} authorID={props.authorID} genreID={props.genreID} setDisplayElementPopupForDelete={setDisplayElementPopupForDelete} getBookList={props.getBookList} setDisplayElement={props.setDisplayElement} setHideElement={props.setHideElement}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChosenBook;","import React, { useContext, useEffect, useState } from 'react';\r\nimport styles from '../ListElement.module.css';\r\nimport BookInfo from './BookInfo';\r\nimport ChosenBook from './ChosenBook';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst BookListElement = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    \r\n    const [hideElement, setHideElement] = useState(false);\r\n    const [displayElement, setDisplayElement] = useState(false);\r\n    const [gridOrder, setGridOrder] = useState(false);\r\n\r\n    function updateBookButtonClickHandler() {\r\n        props.setDisplayBookPopupForUpdate(true);\r\n        props.bookPropsFromBookListElementToBookComponent(props.bookID, props.authorID, props.genreID);\r\n        setHideElement(true);\r\n    }\r\n\r\n    function clickElementHandler() {\r\n        if (!displayElement) {\r\n            setHideElement(true);\r\n            setDisplayElement(true);\r\n        }\r\n    }\r\n\r\n    function searchForSearchText() {\r\n        if (auth.searchText) {\r\n            if (auth.searchText.length > 0 ) {\r\n                const searchTextToLowerCase = auth.searchText.toLowerCase();\r\n                if (!(props.title.toLowerCase().includes(searchTextToLowerCase)) && !(props.author.toLowerCase().includes(searchTextToLowerCase)) && !(props.isbn.toLowerCase().includes(searchTextToLowerCase)) && !(props.genreName.toLowerCase().includes(searchTextToLowerCase)) && !(props.summary.toLowerCase().includes(searchTextToLowerCase))) {\r\n                    setHideElement(true);\r\n                    setGridOrder(true);\r\n                } else {\r\n                    setHideElement(false);\r\n                    setGridOrder(false);\r\n                }\r\n            } else {\r\n                setHideElement(false);\r\n                setGridOrder(false);\r\n            }\r\n        } else {\r\n            setHideElement(false);\r\n            setGridOrder(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchForSearchText();\r\n    }, [auth.searchText]);\r\n\r\n    return (\r\n        <div className={`${styles.listElement} ${hideElement ? styles.hideElement : ''} ${gridOrder ? styles.gridOrder : ''}`} onClick={clickElementHandler} data-cy='book_list_element'>\r\n            {!displayElement && (\r\n                <div>\r\n                    <BookInfo title={props.title} author={props.author} isbn={props.isbn} genreName={props.genreName} summary={props.summary}/>\r\n                </div>    \r\n            )}\r\n            {displayElement && (\r\n                <div>\r\n                    <BookInfo title={props.title} author={props.author} isbn={props.isbn} genreName={props.genreName} summary={props.summary}/>\r\n                    <ChosenBook title={props.title} author={props.author} isbn={props.isbn} genreName={props.genreName} summary={props.summary} setDisplayElement={setDisplayElement} setHideElement={setHideElement} getBookList={props.getBookList} updateBookButtonClickHandler={updateBookButtonClickHandler} bookID={props.bookID} authorID={props.authorID} genreID={props.genreID} getBookList={props.getBookList}/>\r\n                </div>    \r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookListElement;","import React, { useState, useEffect, useContext } from 'react';\r\nimport BookList from './BookList';\r\nimport NewBook from './NewBook';\r\nimport BookListElement from './BookListElement';\r\nimport BookPopupForUpdate from './BookPopupForUpdate';\r\nimport BookPopupForDelete from './BookPopupForDelete';\r\nimport {AuthContext} from '../../context/auth-context';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nconst BookComponent = (props) => {\r\n    const [displayBooks, setDisplayBooks] = useState(true);\r\n    const [bookArray, setBookArray] = useState();\r\n    const [displayBookPopupForUpdate, setDisplayBookPopupForUpdate] = useState(false);\r\n    const [displayBookPopupForDelete, setDisplayBookPopupForDelete] = useState(false);\r\n    const [bookIDForBookPopupForUpdate, setbookIDForBookPopupForUpdate] = useState();\r\n    const [authorIDForBookPopupForUpdate, setAuthorIDForBookPopupForUpdate] = useState();\r\n    const [genreIDForBookPopupForUpdate, setGenreIDForBookPopupForUpdate] = useState();\r\n    const [newBookInfo, setNewBookInfo] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function getBookList() {\r\n        const response = await fetch('catalog/enhanced', {\r\n            headers: {\r\n                'Authorization': `Bearer ${auth.token}`\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        if (typeof body === 'object') {\r\n            if (body.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n        setBookArray(() => {\r\n            return body.map(element => <BookListElement key={element.book_id} bookID={element.book_id} title={element.title} authorID={element.author_id} author={`${element.first_name} ${element.family_name}`} isbn={element.isbn} genreName={element.name} genreID={element.genre_id} summary={element.summary} setDisplayBookPopupForUpdate={setDisplayBookPopupForUpdate} bookPropsFromBookListElementToBookComponent={bookPropsFromBookListElementToBookComponent} setDisplayBookPopupForDelete={setDisplayBookPopupForDelete} getBookList={getBookList}/>);\r\n        });\r\n    }\r\n\r\n    function bookPropsFromBookListElementToBookComponent(bookID, authorID, genreID) {\r\n        setbookIDForBookPopupForUpdate(bookID);\r\n        setAuthorIDForBookPopupForUpdate(authorID);\r\n        setGenreIDForBookPopupForUpdate(genreID);\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBookList();\r\n    }, []);\r\n\r\n    return (<div data-cy='book_component'>\r\n            <MetaTags>\r\n                <meta name=\"viewport\" content=\"initial-scale=1.0\"/>\r\n            </MetaTags>\r\n            <NewBook getBookListMyComponentNewToNewBook={getBookList} />\r\n            <BookList bookArray={bookArray}/>\r\n        </div>)\r\n}\r\n\r\nexport default BookComponent;","import React, { useState, useContext } from 'react';\r\nimport styles from \"../NewElementForm.module.css\";\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst NewAuthorForm = (props) => {\r\n    const [newAuthorFirstName, setNewAuthorFirstName] = useState();\r\n    const [newAuthorFamilyName, setNewAuthorFamilyName] = useState();\r\n    const [newAuthorBirthDate, setNewAuthorBirthDate] = useState();\r\n    const [newAuthorDeathDate, setNewAuthorDeathDate] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    function newAuthorFormFirstNameChangeHandler(event) {\r\n        setNewAuthorFirstName(event.target.value);\r\n    }\r\n\r\n    function newAuthorFormFamilyNameChangeHandler(event) {\r\n        setNewAuthorFamilyName(event.target.value);\r\n    }\r\n\r\n    function newAuthorFormBirthChangeHandler(event) {\r\n        setNewAuthorBirthDate(event.target.value);\r\n    }\r\n\r\n    function newAuthorFormDeathChangeHandler(event) {\r\n        setNewAuthorDeathDate(event.target.value);\r\n    }\r\n    \r\n    function newAuthorCancelButtonClickHandler() {\r\n        props.hideNewAuthorForm();\r\n    }\r\n\r\n    async function newAuthorFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        setValidationErrors([]);\r\n        let newAuthorFormInfo = {\r\n            first_name: newAuthorFirstName,\r\n            family_name: newAuthorFamilyName,\r\n            dateOfBirth: newAuthorBirthDate\r\n        }\r\n\r\n        if (newAuthorFirstName) {\r\n            newAuthorFormInfo = {...newAuthorFormInfo, escaped_first_name: newAuthorFirstName.replaceAll('\\'', '\\\\\\'')};\r\n        }\r\n\r\n        if (newAuthorFamilyName) {\r\n            newAuthorFormInfo = {...newAuthorFormInfo, escaped_family_name: newAuthorFamilyName.replaceAll('\\'', '\\\\\\'')};\r\n        }\r\n\r\n        if (newAuthorDeathDate) {\r\n            newAuthorFormInfo = {...newAuthorFormInfo, dateOfDeath: newAuthorDeathDate};\r\n        }\r\n\r\n        props.passNewAuthorInfo(newAuthorFormInfo);\r\n\r\n        try {\r\n            const response = await fetch('catalog/author/create/one', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                },\r\n                body: JSON.stringify(newAuthorFormInfo)\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n                if (data.hasOwnProperty('errors')) {\r\n                    const errorMessages = data.errors.map(element => element.msg);\r\n                    if (errorMessages.includes(\"author already in database\")) {\r\n                        props.showDuplicateAuthorWarning(true);\r\n                    } else {\r\n                        setValidationErrors(() => {\r\n                            return errorMessages.map(element => <li>{element}</li>);\r\n                        });\r\n                    }\r\n                } else {\r\n                    props.getAuthorList();\r\n                    props.hideNewAuthorForm();\r\n                    return response;\r\n                }\r\n            }\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form id={styles.newElementForm} onSubmit={newAuthorFormSubmitHandler} data-cy='new_author_form'>\r\n                <ul>{validationErrors}</ul>\r\n                <label>First Name<input type='text' name='newAuthorFormFirstNameInput' onChange={newAuthorFormFirstNameChangeHandler} value={newAuthorFirstName}/></label>\r\n                <label>Family Name<input type='text' name='newAuthorFormFamilyNameInput' onChange={newAuthorFormFamilyNameChangeHandler} value={newAuthorFamilyName}/></label>\r\n                <label>Date of Birth<input type='date' name='newAuthorFormBirthInput' onChange={newAuthorFormBirthChangeHandler} value={newAuthorBirthDate}/></label>\r\n                <label>Date of Death<input type='date' name='newAuthorFormDeathInput' onChange={newAuthorFormDeathChangeHandler} value={newAuthorDeathDate}/></label>\r\n                <div id={styles.buttonDiv}>\r\n                    <button type='submit'>Submit</button>\r\n                    <button onClick={newAuthorCancelButtonClickHandler}>Cancel</button>\r\n                </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewAuthorForm;","import React, { useContext } from \"react\";\r\nimport styles from '../Popup.module.css';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst DuplicateAuthorWarning = (props) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function duplicateAuthorWarningSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const response = await fetch(`catalog/author/create/two`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            },\r\n            body: JSON.stringify(props.newAuthorInfoForWarning)\r\n        });\r\n        const data = response.json();\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n        props.hideDuplicateAuthorWarning();\r\n        props.hideNewAuthorForm();\r\n        props.getAuthorList();\r\n    }\r\n    \r\n    function hideDuplicateAuthorWarning() {\r\n        props.hideDuplicateAuthorWarning();\r\n        props.hideNewAuthorForm();\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.popup}>\r\n            <div className={styles.popup_inner}>\r\n                <form onSubmit={duplicateAuthorWarningSubmitHandler}>\r\n                    <p>An author named {`${props.newAuthorInfoForWarning.first_name} ${props.newAuthorInfoForWarning.family_name}`} is already in the database.</p>\r\n                    <p>Do you still wish to create this author?</p>\r\n                    <div id={styles.button_div}>\r\n                        <button type=\"submit\">Yes</button>\r\n                        <button className='close-button' id={styles.right_most_button} onClick={hideDuplicateAuthorWarning}>No</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuplicateAuthorWarning;","import React, { useState } from 'react';\r\nimport NewAuthorForm from './NewAuthorForm';\r\nimport DuplicateAuthorWarning from './DuplicateAuthorWarning';\r\nimport styles from '../NewElement.module.css';\r\n\r\nconst NewAuthor = (props) => {\r\n    const [isAddingNewAuthor, setIsAddingNewAuthor] = useState(false);\r\n    const [addingDuplicateAuthor, setAddingDuplicateAuthor] = useState(false);\r\n    const [newAuthorInfoState, setNewAuthorInfoState] = useState();\r\n\r\n    function newAuthorButtonClickHandler() {\r\n        setIsAddingNewAuthor(true);\r\n    }\r\n\r\n    function hideNewAuthorForm() {\r\n        setIsAddingNewAuthor(false);\r\n    }\r\n\r\n    function showDuplicateAuthorWarning() {\r\n        setAddingDuplicateAuthor(true);\r\n    }\r\n\r\n    function hideDuplicateAuthorWarning() {\r\n        setAddingDuplicateAuthor(false);\r\n    }\r\n\r\n    function passNewAuthorInfo(newAuthorInfo) {\r\n        setNewAuthorInfoState(newAuthorInfo);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {!isAddingNewAuthor && !addingDuplicateAuthor && <div id={styles.addElementButtonContainer}><button id={styles.addElementButton} onClick={newAuthorButtonClickHandler}>Add New Author</button></div>}\r\n            {isAddingNewAuthor && <NewAuthorForm hideNewAuthorForm={hideNewAuthorForm} getAuthorList={props.getAuthorList} showDuplicateAuthorWarning={showDuplicateAuthorWarning} passNewAuthorInfo={passNewAuthorInfo}/>}\r\n            {addingDuplicateAuthor && (\r\n                <div>\r\n                    {<DuplicateAuthorWarning hideDuplicateAuthorWarning={hideDuplicateAuthorWarning} showDuplicateAuthorWarning={showDuplicateAuthorWarning} newAuthorInfoForWarning={newAuthorInfoState} getAuthorList={props.getAuthorList} hideNewAuthorForm={hideNewAuthorForm}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewAuthor;","import React, { useState } from \"react\";\r\nimport styles from '../List.module.css';\r\n\r\nconst AuthorList = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <ul className={styles.ulGrid} data-cy='author_list'>{props.authorArray}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorList;","import React from \"react\";\r\nimport styles from '../ElementInfo.module.css';\r\n\r\nconst AuthorInfo = (props) => {\r\n    //console.log('name: ' + props.firstName + ' ' + props.familyName + ', props.dateOfBirth: ' + props.dateOfBirth);\r\n    return (\r\n        <div data-cy='author_info'>\r\n            <p data-cy='author_info_name_field'>{`${props.familyName}, ${props.firstName}`}</p>\r\n            <p data-cy='author_info_birth_date'>Born: {`${props.dateOfBirth.slice(5, 7)}-${props.dateOfBirth.slice(8, 10)}-${props.dateOfBirth.slice(0, 4)}`}</p>\r\n            <p data-cy='author_info_death_date'>Died: {props.dateOfDeath && `${props.dateOfDeath.slice(5, 7)}-${props.dateOfDeath.slice(8, 10)}-${props.dateOfDeath.slice(0, 4)}`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorInfo;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from '../ElementPopupForUpdate.module.css';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst AuthorPopupForUpdate = (props) => {\r\n    const [authorUpdateFormFirstNameValue, setAuthorUpdateFormFirstNameValue] = useState();\r\n    const [authorUpdateFormFamilyNameValue, setAuthorUpdateFormFamilyNameValue] = useState();\r\n    const [authorUpdateFormBirthValue, setAuthorUpdateFormBirthValue] = useState();\r\n    const [authorUpdateFormDeathValue, setAuthorUpdateFormDeathValue] = useState();\r\n    const [displayDuplicateWarning, setDisplayDuplicateWarning] = useState(false);\r\n    const [initialFirstName, setInitialFirstName] = useState();\r\n    const [initialLastName, setInitialLastName] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function getInitialValues() {\r\n        try {\r\n            const response = await fetch(`catalog/author/${props.authorID}/update`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setAuthorUpdateFormFirstNameValue(data[0].first_name);\r\n            setAuthorUpdateFormFamilyNameValue(data[0].family_name);\r\n            setAuthorUpdateFormBirthValue((data[0].date_of_birth).slice(0, 10));\r\n            data[0].date_of_death && setAuthorUpdateFormDeathValue((data[0].date_of_death).slice(0, 10));\r\n            setInitialFirstName(data[0].first_name);\r\n            setInitialLastName(data[0].family_name);\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    const updateAuthorNameCheck = async (updatedAuthorData) => {\r\n        try {\r\n            const response = await fetch(`catalog/author/${props.authorID}/update/one`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                },\r\n                body: JSON.stringify(updatedAuthorData)\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n                if (data.hasOwnProperty('errors')) {\r\n                    const errorMessages = data.errors.map(element => element.msg);\r\n                    if (errorMessages.includes(\"author already in database\")) {\r\n                        setDisplayDuplicateWarning(true);\r\n                    } else {\r\n                        setValidationErrors(() => {\r\n                            return errorMessages.map(element => <li>{element}</li>);\r\n                        });\r\n                    }\r\n                } else {\r\n                    props.setDisplayAuthorPopupForUpdate(false);\r\n                    props.setDisplayChosenElement(false);\r\n                    props.setHideChosenElement(false);\r\n                    props.getAuthorList();\r\n                    return response;\r\n                }\r\n            }\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    const updateAuthorNoNameCheck = async (updatedAuthorData) => {\r\n        try {\r\n            const response = await fetch(`catalog/author/${props.authorID}/update/two`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                },\r\n                body: JSON.stringify(updatedAuthorData)\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n                if (data.hasOwnProperty('errors')) {\r\n                    const errorMessages = data.errors.map(element => element.msg);\r\n                    setValidationErrors(() => {\r\n                        return errorMessages.map(element => <li>{element}</li>);\r\n                    });\r\n                    \r\n                } else {\r\n                    setDisplayDuplicateWarning(false);\r\n                    props.setDisplayAuthorPopupForUpdate(false);\r\n                    props.setDisplayChosenElement(false);\r\n                    props.setHideChosenElement(false);\r\n                    props.getAuthorList();\r\n                }\r\n            }\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    async function authorUpdateFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        let updatedAuthorData = {\r\n            first_name: authorUpdateFormFirstNameValue,\r\n            escaped_first_name: authorUpdateFormFirstNameValue.replaceAll('\\'', '\\\\\\''),\r\n            family_name: authorUpdateFormFamilyNameValue,\r\n            escaped_family_name: authorUpdateFormFamilyNameValue.replaceAll('\\'', '\\\\\\''),\r\n            birthDate: authorUpdateFormBirthValue,\r\n        }\r\n        if (authorUpdateFormDeathValue) {\r\n            updatedAuthorData = {...updatedAuthorData, deathDate: authorUpdateFormDeathValue}\r\n        }\r\n        if ((initialFirstName === updatedAuthorData.first_name) && (initialLastName === updatedAuthorData.family_name)) {\r\n            updateAuthorNoNameCheck(updatedAuthorData);\r\n        } else {\r\n            updateAuthorNameCheck(updatedAuthorData);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getInitialValues();\r\n    }, [])\r\n\r\n    function authorUpdateFormFirstNameChangeHandler(event) {\r\n        setAuthorUpdateFormFirstNameValue(event.target.value);\r\n    }\r\n\r\n    function authorUpdateFormFamilyNameChangeHandler(event) {\r\n        setAuthorUpdateFormFamilyNameValue(event.target.value);\r\n    }\r\n\r\n    function authorUpdateFormBirthDateChangeHandler(event) {\r\n        setAuthorUpdateFormBirthValue(event.target.value);\r\n    }\r\n\r\n    function authorUpdateFormDeathDateChangeHandler(event) {\r\n        setAuthorUpdateFormDeathValue(event.target.value);\r\n    }\r\n    \r\n    function popupForUpdateCloseButtonHandler() {\r\n        props.setDisplayAuthorPopupForUpdate(false);\r\n    }\r\n\r\n    async function duplicateAuthorUpdateWarningSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedAuthorData = {\r\n            first_name: authorUpdateFormFirstNameValue,\r\n            escaped_first_name: authorUpdateFormFirstNameValue.replaceAll('\\'', '\\\\\\''),\r\n            family_name: authorUpdateFormFamilyNameValue,\r\n            escaped_family_name: authorUpdateFormFamilyNameValue.replaceAll('\\'', '\\\\\\''),\r\n            birthDate: authorUpdateFormBirthValue,\r\n            deathDate: authorUpdateFormDeathValue\r\n        }\r\n        updateAuthorNoNameCheck(updatedAuthorData);\r\n    }\r\n\r\n    function authorDuplicateWarningCancelButtonHandler() {\r\n        setDisplayDuplicateWarning(false);\r\n        props.setDisplayAuthorPopupForUpdate(false);\r\n    }\r\n    \r\n    return <div className={styles.popup}>\r\n        <div className={styles.popupInner} data-cy='author_popup_for_update'>\r\n            {!displayDuplicateWarning && <form onSubmit={authorUpdateFormSubmitHandler}>\r\n                <ul>{validationErrors}</ul>\r\n                <label>First Name<input type='text' name='authorUpdateFormFirstNameInput' value={authorUpdateFormFirstNameValue} onChange={authorUpdateFormFirstNameChangeHandler} data-cy='author_update_first_name'/></label>\r\n                <label>Family Name<input type='text' name='authorUpdateFormFamilyNameInput' value={authorUpdateFormFamilyNameValue} onChange={authorUpdateFormFamilyNameChangeHandler} data-cy='author_update_family_name'/></label>\r\n                <label>Date of Birth<input type='date' name='authorUpdateFormBirthInput' value={authorUpdateFormBirthValue} onChange={authorUpdateFormBirthDateChangeHandler} data-cy='author_update_date_of_birth'/></label>\r\n                <label>Date of Death<input type='date' name='authorUpdateFormDeathInput'value={authorUpdateFormDeathValue} onChange={authorUpdateFormDeathDateChangeHandler} data-cy='author_update_date_of_death'/></label>\r\n                <div id={styles.button_div}>\r\n                    <button type=\"submit\">Update Author</button>\r\n                    <button className='close-button' id={styles.right_most_button} onClick={popupForUpdateCloseButtonHandler}>Close</button>\r\n                </div>\r\n            </form>}\r\n            {displayDuplicateWarning && (\r\n                <form onSubmit={duplicateAuthorUpdateWarningSubmitHandler}>\r\n                    <p>An author named {`${authorUpdateFormFirstNameValue} ${authorUpdateFormFamilyNameValue}`} already exists in the database. Are you sure you want to update this author to have that name?</p>\r\n                    <div id={styles.button_div}>\r\n                        <button type='submit'>Update</button>\r\n                        <button id={styles.right_most_button} onClick={authorDuplicateWarningCancelButtonHandler}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AuthorPopupForUpdate;","import React, { useState, useEffect, useContext } from 'react';\r\nimport styles from '../Popup.module.css';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst AuthorPopupForDelete = (props) => {\r\n    const [authorNameOnDeleteForm, setAuthorNameOnDeleteForm] = useState();\r\n    const [authorBirthDateOnDeleteForm, setAuthorBirthDateOnDeleteForm] = useState();\r\n    const [authorDeathDateOnDeleteForm, setAuthorDeathDateOnDeleteForm] = useState();\r\n    const [receivedForeignKeyConstraintError, setReceivedForeignKeyConstraintError] = useState(false);\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n    \r\n    async function getInitialValues() {\r\n        try {\r\n            const response = await fetch(`catalog/author/${props.authorID}/delete`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setAuthorNameOnDeleteForm(`${data[0].first_name} ${data[0].family_name}`);\r\n            setAuthorBirthDateOnDeleteForm(`${data[0].date_of_birth.slice(5, 7)}-${data[0].date_of_birth.slice(8, 10)}-${data[0].date_of_birth.slice(0, 4)}`);\r\n            data[0].date_of_death && setAuthorDeathDateOnDeleteForm(`${data[0].date_of_death.slice(5, 7)}-${data[0].date_of_death.slice(8, 10)}-${data[0].date_of_death.slice(0, 4)}`);\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    async function deleteAuthorFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch(`catalog/author/${props.authorID}/delete`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n            if (data.hasOwnProperty('errors')) {\r\n                const errorMessages = data.errors.map(element => element.msg);\r\n                if (errorMessages.includes(\"SequelizeForeignKeyConstraintError\")) {\r\n                    setReceivedForeignKeyConstraintError(true);\r\n                } else {\r\n                    setValidationErrors(() => {\r\n                        return errorMessages.map(element => <li>{element}</li>);\r\n                    });\r\n                }\r\n            } else {\r\n                props.setDisplayElementPopupForDelete(false);\r\n                props.setDisplayChosenElement(false);\r\n                props.getAuthorList();\r\n            }\r\n\r\n        } catch(e) {\r\n            //console.log(\"error in popupForDelete: \" + e);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getInitialValues();\r\n    }, []);\r\n    \r\n    function popupForDeleteCloseButtonHandler() {\r\n        props.setDisplayElementPopupForDelete(false)\r\n    }\r\n\r\n    function foreignKeyWarningCloseButtonHandler(event) {\r\n        event.preventDefault();\r\n        props.setDisplayElementPopupForDelete(false);\r\n        setReceivedForeignKeyConstraintError(false);\r\n    }\r\n    \r\n    return <div className={styles.popup}>\r\n    <div className={styles.popup_inner} id={styles.popup_for_delete} data-cy='author_popup_for_delete'>\r\n        {!receivedForeignKeyConstraintError && <form onSubmit={deleteAuthorFormSubmitHandler} >\r\n            <h2>Are you sure you want to delete this author?</h2>\r\n            <h3>Name: {authorNameOnDeleteForm}</h3>\r\n            <h3>Date of Birth: {authorBirthDateOnDeleteForm}</h3>\r\n            <h3>Died: {authorDeathDateOnDeleteForm}</h3>\r\n            <div id={styles.button_div}>\r\n                <button type=\"submit\">Delete Author</button>\r\n                <button className='close-button' id={styles.right_most_button} onClick={popupForDeleteCloseButtonHandler}>Close</button>\r\n            </div>\r\n        </form>}\r\n        {receivedForeignKeyConstraintError && (\r\n            <form>\r\n                <h3>You're attempting to delete an author who wrote a book currently stored in the database.</h3>\r\n                <h3>Please delete the book or update it with a different author before deleting this author.</h3>\r\n                <div id={styles.button_div}>\r\n                    <button onClick={foreignKeyWarningCloseButtonHandler}>Close</button>\r\n                </div>\r\n            </form>\r\n        )}\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default AuthorPopupForDelete;","import React, { useState } from 'react';\r\nimport styles from '../ChosenElement.module.css';\r\nimport AuthorInfo from './AuthorInfo.js';\r\nimport AuthorPopupForUpdate from './AuthorPopupForUpdate';\r\nimport AuthorPopupForDelete from './AuthorPopupForDelete';\r\n\r\nconst ChosenAuthor = (props) => {\r\n    const [displayElementPopupForUpdate, setDisplayElementPopupForUpdate] = useState(false);\r\n    const [displayElementPopupForDelete, setDisplayElementPopupForDelete] = useState(false);\r\n    \r\n    function chosenAuthorCancelHandler() {\r\n        setTimeout(() => {\r\n            props.setDisplayChosenElement(false);\r\n            props.setHideChosenElement(false);\r\n        }, 50);\r\n    }\r\n\r\n    function chosenAuthorUpdateHandler() {\r\n        setDisplayElementPopupForUpdate(true);\r\n    }\r\n\r\n    function chosenAuthorDeleteHandler() {\r\n        setDisplayElementPopupForDelete(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!displayElementPopupForUpdate && !displayElementPopupForDelete && (\r\n                <div className={styles.chosen_element_popup}>\r\n                    <div className={styles.chosen_element_popup_inner}>\r\n                        <AuthorInfo firstName={props.firstName} familyName={props.familyName} dateOfBirth={props.dateOfBirth} dateOfDeath={props.dateOfDeath}/>\r\n                        <div id={styles.button_div}>\r\n                            <button onClick={chosenAuthorUpdateHandler}>Update</button>\r\n                            <button onClick={chosenAuthorDeleteHandler}>Delete</button>\r\n                            <button onClick={chosenAuthorCancelHandler}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {displayElementPopupForUpdate && (\r\n                <AuthorPopupForUpdate setDisplayAuthorPopupForUpdate={setDisplayElementPopupForUpdate} authorID={props.authorIDForPopupForUpdate} getAuthorList={props.getAuthorList} setDisplayChosenElement={props.setDisplayChosenElement} setHideChosenElement={props.setHideChosenElement}/>\r\n            )}\r\n            {displayElementPopupForDelete && (\r\n                <AuthorPopupForDelete setDisplayElementPopupForDelete={setDisplayElementPopupForDelete} authorID={props.authorIDForPopupForUpdate} getAuthorList={props.getAuthorList} setDisplayChosenElement={props.setDisplayChosenElement}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChosenAuthor;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport AuthorInfo from './AuthorInfo';\r\nimport styles from '../ListElement.module.css'\r\nimport ChosenAuthor from './ChosenAuthor.js';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst AuthorListElement = (props) => {\r\n    const [displayUpdateAndDeleteButtons, setDisplayUpdateAndDeleteButtons] = useState(false);\r\n    const [hideChosenElement, setHideChosenElement] = useState(false);\r\n    const [displayChosenElement, setDisplayChosenElement] = useState(false);\r\n    const [gridOrder, setGridOrder] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n\r\n    function clickElementHandler() {\r\n        if(!displayChosenElement) {\r\n            setDisplayChosenElement(true);\r\n            setHideChosenElement(true);\r\n        }\r\n    }\r\n\r\n    function searchForSearchText() {\r\n        if (auth.searchText) {\r\n            if (auth.searchText.length > 0 ) {\r\n                const searchTextToLowerCase = auth.searchText.toLowerCase();\r\n                const searchableBirthDate = props.dateOfBirth.slice(5,10) + '-' + props.dateOfBirth.slice(0,4);\r\n                const authorFullName = props.firstName + ' ' + props.familyName;\r\n                const authorLastNameCommaFirst = props.familyName + ', ' + props.firstName;\r\n                const authorLastNameFirst = props.familyName + ' ' + props.firstName;\r\n\r\n                if (!(props.firstName.toLowerCase().includes(searchTextToLowerCase)) && !(props.familyName.toLowerCase().includes(searchTextToLowerCase)) && !(searchableBirthDate.includes(searchTextToLowerCase)) && !(authorFullName.toLowerCase().includes(searchTextToLowerCase)) && !(authorLastNameCommaFirst.toLowerCase().includes(searchTextToLowerCase)) && !(authorLastNameFirst.toLowerCase().includes(searchTextToLowerCase))) {\r\n                    if (props.dateOfDeath) {\r\n                        const searchableDeathDate = props.dateOfDeath.slice(5,10) + '-' + props.dateOfDeath.slice(0,4);\r\n                        if (!(searchableDeathDate.includes(searchTextToLowerCase))) {\r\n                            setHideChosenElement(true);\r\n                            setGridOrder(true);\r\n                        } else {\r\n                            setHideChosenElement(false);\r\n                            setGridOrder(false); \r\n                        }\r\n                    } else {\r\n                        setHideChosenElement(true);\r\n                        setGridOrder(true);\r\n                    }\r\n                } else {\r\n                    setHideChosenElement(false);\r\n                    setGridOrder(false);\r\n                }\r\n            } else {\r\n                setHideChosenElement(false);\r\n                setGridOrder(false);\r\n            }\r\n        } else {\r\n            setHideChosenElement(false);\r\n            setGridOrder(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchForSearchText();\r\n    }, [auth.searchText]);\r\n    \r\n    return (\r\n        <div className={`${styles.listElement} ${hideChosenElement ? styles.hideElement: ''} ${gridOrder ? styles.gridOrder : ''}`} onClick={clickElementHandler} data-cy='author_list_element'>\r\n            {!displayChosenElement && (\r\n                <div>\r\n                    <AuthorInfo firstName={props.firstName} familyName={props.familyName} dateOfBirth={props.dateOfBirth} dateOfDeath={props.dateOfDeath}/>\r\n                </div>\r\n            )}\r\n            {displayChosenElement && (\r\n                <div>\r\n                    <AuthorInfo firstName={props.firstName} familyName={props.familyName} dateOfBirth={props.dateOfBirth} dateOfDeath={props.dateOfDeath}/>\r\n                    <ChosenAuthor firstName={props.firstName} familyName={props.familyName} dateOfBirth={props.dateOfBirth} dateOfDeath={props.dateOfDeath} setDisplayChosenElement={setDisplayChosenElement} setHideChosenElement={setHideChosenElement} getAuthorList={props.getAuthorList} authorIDForPopupForUpdate={props.authorID}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorListElement;","import React, { useState, useEffect, useContext } from 'react';\r\nimport NewAuthor from './NewAuthor';\r\nimport AuthorList from './AuthorList';\r\nimport AuthorListElement from './AuthorListElement';\r\nimport AuthorPopupForUpdate from './AuthorPopupForUpdate';\r\nimport AuthorPopupForDelete from './AuthorPopupForDelete';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst AuthorComponent = () => {\r\n    const [displayAuthors, setDisplayAuthors] = useState(true);\r\n    const [authorArray, setAuthorArray] = useState();\r\n    const [displayAuthorPopupForUpdate, setDisplayAuthorPopupForUpdate] = useState(false);\r\n    const [authorIDForPopupForUpdate, setAuthorIDForPopupForUpdate] = useState();\r\n    const [displayAuthorPopupForDelete, setDisplayAuthorPopupForDelete] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function getAuthorList() {\r\n        try {\r\n            const response = await fetch('catalog/authors', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n\r\n            setAuthorArray(() => {\r\n                return data.map(element => <AuthorListElement key={element.author_id} authorID={element.author_id} firstName={element.first_name} familyName={element.family_name} dateOfBirth={element.date_of_birth} dateOfDeath={element.date_of_death} setDisplayAuthorPopupForUpdate={setDisplayAuthorPopupForUpdate} authorInfoToAuthorComponent={authorInfoToAuthorComponent} setDisplayAuthorPopupForDelete={setDisplayAuthorPopupForDelete} setDisplayAuthors={setDisplayAuthors} getAuthorList={getAuthorList}/>);\r\n            });\r\n        } catch(e) {\r\n            //console.log('error: ' + e);\r\n        }        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getAuthorList();\r\n    }, [])\r\n\r\n    function authorInfoToAuthorComponent(authorID) {\r\n        setAuthorIDForPopupForUpdate(authorID);\r\n    }\r\n\r\n    return (\r\n        <div data-cy='author_component'>\r\n            <NewAuthor getAuthorList={getAuthorList}/>\r\n            <AuthorList authorArray={authorArray} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorComponent;","import React, { useState, useContext } from \"react\";\r\nimport styles from '../NewElementForm.module.css';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst NewGenreForm = (props) => {\r\n    const [newGenreFormNameValue, setNewGenreFormValue] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    function newGenreFormNameChangeHandler(event) {\r\n        setNewGenreFormValue(event.target.value);\r\n    }\r\n\r\n    const newGenreFormSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n        let genreName = {\r\n            genreName: newGenreFormNameValue\r\n        }\r\n\r\n        if (newGenreFormNameValue) {\r\n            genreName = {...genreName, escapedGenreName: newGenreFormNameValue.replaceAll('\\'', '\\\\\\'')}\r\n        }\r\n\r\n        console.log(JSON.stringify(genreName));\r\n\r\n        props.sendGenreNameUp(genreName.genreName);\r\n        const response = await fetch('catalog/genre/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            },\r\n            body: JSON.stringify(genreName)\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n            if (data.hasOwnProperty('errors')) {\r\n                const errorMessages = data.errors.map(element => element.msg);\r\n                if (errorMessages.includes(\"SequelizeUniqueConstraintError\")) {\r\n                    props.setAddNewGenre(false);\r\n                    props.setAddingDuplicateGenre(true);\r\n                } else {\r\n                    setValidationErrors(() => {\r\n                        return errorMessages.map(element => <li>{element}</li>);\r\n                    });\r\n                }\r\n            } else {\r\n                props.setAddNewGenre(false);\r\n                props.getGenreList();\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    \r\n    function newGenreFormCancelButtonHandler() {\r\n        props.setAddNewGenre(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form id={styles.newElementForm} onSubmit={newGenreFormSubmitHandler} data-cy='new_genre_form'>\r\n                <ul>{validationErrors}</ul>\r\n                <label>New Genre Name<input type='text' name='newGenreFormNameField' value={newGenreFormNameValue} onChange={newGenreFormNameChangeHandler}/></label>\r\n                <div id={styles.buttonDiv}>\r\n                    <button type='submit'>Submit Genre</button>\r\n                    <button onClick={newGenreFormCancelButtonHandler}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewGenreForm;","import React from 'react';\r\nimport styles from '../Popup.module.css';\r\n\r\nconst DuplicateGenreForm = (props) => {\r\n    \r\n    function duplicateGenreWarningCloseHandler(event) {\r\n        event.preventDefault();\r\n        props.setAddingDuplicateGenre(false);\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className={styles.popup}>\r\n            <div className={styles.popup_inner}>\r\n                <form data-cy='duplicate_genre_form'>\r\n                    <p>A genre named {props.duplicateGenreName} already exists in the database</p>\r\n                    <div id={styles.button_div}>\r\n                        <button onClick={duplicateGenreWarningCloseHandler}>Close</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuplicateGenreForm;","import React, { useState } from \"react\";\r\nimport NewGenreForm from \"./NewGenreForm\";\r\nimport DuplicateGenreForm from \"./DuplicateGenreForm\";\r\nimport styles from \"../NewElement.module.css\";\r\n\r\nconst NewGenre = (props) => {\r\n    const [addNewGenre, setAddNewGenre] = useState(false);\r\n    const [addingDuplicateGenre, setAddingDuplicateGenre] = useState(false);\r\n    const [duplicateGenreName, setDuplicateGenreName] = useState();\r\n\r\n    function addNewGenreButtonClickHandler() {\r\n        setAddNewGenre(true);\r\n    }\r\n\r\n    const receiveGenreName = (name) => {\r\n        setDuplicateGenreName(name);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            {!addNewGenre && !addingDuplicateGenre && (\r\n                <div id={styles.addElementButtonContainer}>\r\n                    <button id={styles.addElementButton} onClick={addNewGenreButtonClickHandler}>Add New Genre</button>\r\n                </div>\r\n            )}\r\n            {addNewGenre && !addingDuplicateGenre && (\r\n                <div>\r\n                    <NewGenreForm setAddNewGenre={setAddNewGenre} getGenreList={props.getGenreList} setAddingDuplicateGenre={setAddingDuplicateGenre} sendGenreNameUp={receiveGenreName}/>\r\n                </div>\r\n            )}\r\n            {!addNewGenre && addingDuplicateGenre && (\r\n                <div>\r\n                    <NewGenreForm setAddNewGenre={setAddNewGenre} getGenreList={props.getGenreList} setAddingDuplicateGenre={setAddingDuplicateGenre} />\r\n                    <DuplicateGenreForm setAddingDuplicateGenre={setAddingDuplicateGenre} duplicateGenreName={duplicateGenreName}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewGenre;","import React from \"react\";\r\nimport styles from '../List.module.css';\r\n\r\nconst GenreList = (props) => {\r\n    return (\r\n        <div data-cy='genre_list'>\r\n            <ul className={styles.ulGrid}>{props.genreArray}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreList;","import React from \"react\";\r\nimport styles from '../ElementInfo.module.css';\r\n\r\nconst GenreInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <p data-cy='genre_info_name_field'>{props.genreName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreInfo;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from '../ElementPopupForUpdate.module.css';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst GenrePopupForUpdate = (props) => {\r\n    const [genreUpdateFormNameValue, setGenreUpdateFormNameValue] = useState();\r\n    const [updatedGenreNameAlreadyExists, setUpdatedGenreNameAlreadyExists] = useState(false);\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function getInitialGenreValues() {\r\n        try {\r\n            const response = await fetch(`catalog/genre/${props.genreID}/update`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setGenreUpdateFormNameValue(data[0].name);\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n    \r\n    function genreUpdateFormCancelButtonClickHandler() {\r\n        props.setDisplayElementPopupForUpdate(false);\r\n    }\r\n\r\n    function genreUpdateFormNameChangeHandler(event) {\r\n        setGenreUpdateFormNameValue(event.target.value);\r\n    }\r\n\r\n    async function genreUpdateFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const genreName = {\r\n            genreName: genreUpdateFormNameValue,\r\n            escapedGenreName: genreUpdateFormNameValue.replaceAll('\\'', '\\\\\\'')\r\n        };\r\n        try {\r\n            const response = await fetch(`catalog/genre/${props.genreID}/update`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                },\r\n                body: JSON.stringify(genreName)\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n                if (data.hasOwnProperty('errors')) {\r\n                    const errorMessages = data.errors.map(element => element.msg);\r\n                    if (errorMessages.includes(\"SequelizeUniqueConstraintError\")) {\r\n                        setUpdatedGenreNameAlreadyExists(true);\r\n                    } else {\r\n                        setValidationErrors(() => {\r\n                            return errorMessages.map(element => <li>{element}</li>);\r\n                        });\r\n                    }\r\n                } else {\r\n                    props.setDisplayElementPopupForUpdate(false);\r\n                    props.setDisplayChosenElement(false);\r\n                    props.setHideChosenElement(false);\r\n                    props.getGenreList();\r\n                }\r\n            }\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    function duplicateGenreNameWarningCloseButtonHandler() {\r\n        setUpdatedGenreNameAlreadyExists(false);\r\n        props.setDisplayElementPopupForUpdate(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInitialGenreValues();\r\n    }, []);\r\n    \r\n    return <div className={styles.popup}>\r\n    <div className={styles.popupInner} data-cy='genre_popup_for_update'>\r\n        {!updatedGenreNameAlreadyExists && <form onSubmit={genreUpdateFormSubmitHandler}>\r\n            <ul>{validationErrors}</ul>\r\n            <label>Genre Name<input type='text' name='genreUpdateFormNameField' value={genreUpdateFormNameValue} onChange={genreUpdateFormNameChangeHandler}/></label>\r\n            <div id={styles.button_div}>\r\n                <button type='submit'>Update</button><button onClick={genreUpdateFormCancelButtonClickHandler} id={styles.right_most_button}>Cancel</button>\r\n            </div>\r\n\r\n        </form>}\r\n        {updatedGenreNameAlreadyExists && (\r\n            <form>\r\n                <p>Genre name {genreUpdateFormNameValue} already exists in the database.</p>\r\n                <div id={styles.button_div}>\r\n                    <button onClick={duplicateGenreNameWarningCloseButtonHandler}>Close</button>\r\n                </div>\r\n            </form>\r\n        )}\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default GenrePopupForUpdate;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from '../Popup.module.css';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst GenrePopupForDelete = (props) => {\r\n    const [genreToDelete, setGenreToDelete] = useState();\r\n    const [receivedForeignKeyConstraintError, setReceivedForeignKeyConstraintError] = useState(false);\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function getGenreDeleteFormValues() {\r\n        try {\r\n            const response = await fetch(`catalog/genre/${props.genreID}/delete`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}`\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            if (typeof data === 'object') {\r\n                if (data.name === 'TokenExpiredError') {\r\n                    auth.setIsLoggedIn(false);\r\n                }\r\n            }\r\n            setGenreToDelete(data[0].name);\r\n        } catch(e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    async function genreDeleteFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const response = await fetch(`catalog/genre/${props.genreID}/delete`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.token}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (data.name === 'TokenExpiredError') {\r\n            auth.setIsLoggedIn(false);\r\n        }\r\n        if (data.hasOwnProperty('errors')) {\r\n            const errorMessages = data.errors.map(element => element.msg);\r\n            if (errorMessages.includes(\"SequelizeForeignKeyConstraintError\")) {\r\n                setReceivedForeignKeyConstraintError(true);\r\n            } else {\r\n                setValidationErrors(() => {\r\n                    return errorMessages.map(element => <li>{element}</li>);\r\n                });\r\n            }\r\n        } else {\r\n            props.setDisplayElementPopupForDelete(false);\r\n            props.setDisplayChosenElement(false);\r\n            props.setHideChosenElement(false);\r\n            props.getGenreList();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGenreDeleteFormValues();\r\n    }, []);\r\n    \r\n    function genreDeleteFormCancelHandler() {\r\n        props.setDisplayElementPopupForDelete(false);\r\n    }\r\n\r\n    function foreignKeyWarningCloseButtonHandler() {\r\n        setReceivedForeignKeyConstraintError(false);\r\n        props.setDisplayElementPopupForDelete(false);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.popup}>\r\n            <div className={styles.popup_inner} id={styles.popup_for_delete} data-cy='genre_popup_for_delete'>\r\n                {!receivedForeignKeyConstraintError && (\r\n                    <form onSubmit={genreDeleteFormSubmitHandler}>\r\n                        <h2>Are you sure you wish to delete this genre?</h2>\r\n                        <h3>{genreToDelete}</h3>\r\n                        <div id={styles.button_div}>\r\n                            <button type='submit'>Delete</button><button onClick={genreDeleteFormCancelHandler} id={styles.right_most_button}>Cancel</button>\r\n                        </div>\r\n                </form>\r\n                )}\r\n                {receivedForeignKeyConstraintError && (\r\n                    <form>\r\n                        <h3>You're attempting to delete the genre of a book currently stored in the database.</h3>\r\n                        <h3>Please delete the book or update it with a different genre before deleting this genre.</h3>\r\n                        <div id={styles.button_div}>\r\n                            <button onClick={foreignKeyWarningCloseButtonHandler}>Close</button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenrePopupForDelete;","import React, { useState } from 'react';\r\nimport styles from '../ChosenElement.module.css';\r\nimport GenreInfo from './GenreInfo';\r\nimport GenrePopupForUpdate from './GenrePopupForUpdate';\r\nimport GenrePopupForDelete from './GenrePopupForDelete';\r\n\r\nconst ChosenGenre = (props) => {\r\n    const [displayElementPopupForDelete, setDisplayElementPopupForDelete] = useState(false);\r\n    const [displayElementPopupForUpdate, setDisplayElementPopupForUpdate] = useState(false);\r\n\r\n    function chosenElementCancelHandler() {\r\n            setTimeout(() => {\r\n                props.setHideChosenElement(false);\r\n                props.setDisplayChosenElement(false);\r\n        }, 50);\r\n    }\r\n\r\n    function chosenElementUpdateHandler() {\r\n        setDisplayElementPopupForUpdate(true);\r\n    }\r\n\r\n    function chosenElementDeleteHandler() {\r\n        setDisplayElementPopupForDelete(true);\r\n    }\r\n    \r\n        return (\r\n            <div>\r\n                {!displayElementPopupForUpdate && !displayElementPopupForDelete && (\r\n                    <div className={styles.chosen_element_popup}>\r\n                        <div className={styles.chosen_element_popup_inner}>\r\n                            <GenreInfo genreName={props.genreName}/>\r\n                            <div id={styles.button_div}>\r\n                                <button onClick={chosenElementUpdateHandler}>Update</button>\r\n                                <button onClick={chosenElementDeleteHandler}>Delete</button>\r\n                                <button onClick={chosenElementCancelHandler}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {displayElementPopupForUpdate && (\r\n                    <div>\r\n                        <GenrePopupForUpdate setDisplayElementPopupForUpdate={setDisplayElementPopupForUpdate} genreID={props.genreID} getGenreList={props.getGenreList} setHideChosenElement={props.setHideChosenElement} setDisplayChosenElement={props.setDisplayChosenElement} />\r\n                    </div>\r\n                )}\r\n                {displayElementPopupForDelete && (\r\n                    <div>\r\n                        <GenrePopupForDelete genreID={props.genreID} getGenreList={props.getGenreList} setDisplayElementPopupForDelete={setDisplayElementPopupForDelete} setHideChosenElement={props.setHideChosenElement} setDisplayChosenElement={props.setDisplayChosenElement}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n    ) \r\n}\r\n\r\nexport default ChosenGenre;","import React, { useEffect, useContext, useState } from \"react\";\r\nimport GenreInfo from './GenreInfo';\r\nimport styles from '../ListElement.module.css';\r\nimport ChosenGenre from './ChosenGenre.js';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst GenreListItem = (props) => {\r\n    const [displayChosenElement, setDisplayChosenElement] = useState(false);\r\n    const [hideChosenElement, setHideChosenElement] = useState(false);\r\n    const [gridOrder, setGridOrder] = useState();\r\n    const auth = useContext(AuthContext);\r\n\r\n    function clickElementHandler() {\r\n        setDisplayChosenElement(true);\r\n        setHideChosenElement(true);\r\n    }\r\n\r\n    function searchForSearchText() {\r\n        if (auth.searchText) {\r\n            if (auth.searchText.length > 0 ) {\r\n                const searchTextToLowerCase = auth.searchText.toLowerCase();\r\n                if (!(props.genreName.toLowerCase().includes(searchTextToLowerCase))) {\r\n                    setHideChosenElement(true);\r\n                    setGridOrder(true);\r\n                } else {\r\n                    setHideChosenElement(false);\r\n                    setGridOrder(false);\r\n                }\r\n            } else {\r\n                setHideChosenElement(false);\r\n                setGridOrder(false);\r\n            }\r\n        } else {\r\n            setHideChosenElement(false);\r\n            setGridOrder(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchForSearchText();\r\n    }, [auth.searchText]);\r\n    \r\n    return (\r\n        <div className={`${styles.listElement} ${hideChosenElement ? styles.hideElement: ''} ${gridOrder ? styles.gridOrder : ''}`} onClick={clickElementHandler}>\r\n            {!displayChosenElement && (\r\n                <GenreInfo genreName={props.genreName}/>\r\n            )}\r\n            {displayChosenElement && (\r\n                <div>\r\n                    <GenreInfo genreName={props.genreName}/>\r\n                    <ChosenGenre genreName={props.genreName} setDisplayChosenElement={setDisplayChosenElement} setHideChosenElement={setHideChosenElement} genreID={props.genreID} getGenreList={props.getGenreList}/>\r\n                </div>\r\n\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreListItem;","import React, { useEffect, useState, useContext } from 'react';\r\nimport NewGenre from './NewGenre';\r\nimport GenreList from './GenreList';\r\nimport GenreListItem from './GenreListItem';\r\nimport GenrePopupForUpdate from './GenrePopupForUpdate';\r\nimport GenrePopupForDelete from './GenrePopupForDelete';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst GenreComponent = () => {\r\n    const [genreArray, setGenreArray] = useState();\r\n    const [displayGenrePopupForUpdate, setDisplayGenrePopupForUpdate] = useState(false);\r\n    const [genreIDInPopups, setGenreIDInPopups] = useState();\r\n    const [displayGenrePopupForDelete, setDisplayGenrePopupForDelete] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n\r\n    async function getGenreList() {\r\n        const response = await fetch('catalog/genres', {\r\n            headers: {\r\n                'Authorization': `Bearer ${auth.token}`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        if (typeof data === 'object') {\r\n            if (data.name === 'TokenExpiredError') {\r\n                auth.setIsLoggedIn(false);\r\n            }\r\n        }\r\n\r\n        setGenreArray(() => {\r\n            return data.map(element => <GenreListItem key={element.genre_id} genreID={element.genre_id} genreName={element.name} setDisplayGenrePopupForUpdate={setDisplayGenrePopupForUpdate} receiveGenreID={receiveGenreID} setDisplayGenrePopupForDelete={setDisplayGenrePopupForDelete} getGenreList={getGenreList}/>)\r\n        });\r\n    }\r\n\r\n    function receiveGenreID(genreID) {\r\n        setGenreIDInPopups(genreID);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGenreList();\r\n    }, []);\r\n    \r\n    return (\r\n        <div data-cy='genre_component'>\r\n            {!displayGenrePopupForUpdate && !displayGenrePopupForDelete && <div>\r\n                <NewGenre getGenreList={getGenreList}/>\r\n                <GenreList genreArray={genreArray}/>    \r\n            </div>}\r\n            {displayGenrePopupForUpdate && <div>\r\n                <NewGenre getGenreList={getGenreList}/>\r\n                <GenreList genreArray={genreArray}/> \r\n                <GenrePopupForUpdate setDisplayGenrePopupForUpdate={setDisplayGenrePopupForUpdate} genreID={genreIDInPopups} getGenreList={getGenreList}/>   \r\n            </div>}\r\n            {displayGenrePopupForDelete && <div>\r\n                <NewGenre getGenreList={getGenreList}/>\r\n                <GenreList genreArray={genreArray}/> \r\n                <GenrePopupForDelete genreID={genreIDInPopups} getGenreList={getGenreList} setDisplayGenrePopupForDelete={setDisplayGenrePopupForDelete}/>   \r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreComponent;","import React, { useState } from 'react';\r\nimport { FaBars, FaSearch } from 'react-icons/fa';\r\nimport styles from './NavbarHeader.module.css';\r\n\r\nconst NavbarHeader = (props) => {\r\n    const [showSearchBar, setShowSearchBar] = useState(false);\r\n\r\n    function openNav() {\r\n        props.setDisplayNavbar(true);\r\n    }\r\n\r\n    function faSearchClickHandler() {\r\n        if (!showSearchBar) {\r\n            setShowSearchBar(true);\r\n        } else {\r\n            setShowSearchBar(false);\r\n        }\r\n    }\r\n\r\n    function searchTextInputChangeHandler(event) {\r\n        props.setSearchText(event.target.value);\r\n    }\r\n\r\n    function searchFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles.navbarHeader}>\r\n                <FaBars className={styles.fabars} size={`1.5rem`} onClick={openNav}/>\r\n                <div className={styles.searchDiv}>\r\n                    <form onSubmit={searchFormSubmitHandler}>\r\n                        <input className={`${styles.searchDiv_form_input} ${showSearchBar && styles.show_search_bar}`} type='text' name='searchTextInput' onChange={searchTextInputChangeHandler}/>\r\n                    </form>\r\n                    <FaSearch id={styles.fasearchIcon} size={'1.5rem'} onClick={faSearchClickHandler}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default NavbarHeader;","import React from 'react';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport styles from './NavbarOptions.module.css';\r\n\r\nconst NavbarOptions = (props) => {\r\n    //console.log(\"displayNavbar is true or false: \" + props.displayNavbar);\r\n    \r\n    function booksOptionClickHandler() {\r\n        //console.log(\"hello books\");\r\n        props.displayBookComponentFunction();\r\n        props.setDisplayNavbar(false);\r\n    }\r\n\r\n    function authorsOptionClickHandler() {\r\n        //console.log(\"hello authors\");\r\n        props.displayAuthorComponentFunction();\r\n        props.setDisplayNavbar(false);\r\n    }\r\n\r\n    function genresOptionClickHandler() {\r\n        props.displayGenreComponentFunction();\r\n        props.setDisplayNavbar(false);\r\n    }\r\n\r\n    function xbuttonClickHandler() {\r\n        props.setDisplayNavbar(false);\r\n    }\r\n\r\n    async function logoutOptionClickHandler() {\r\n        const response = await fetch('users/logout', {\r\n            method: 'POST'\r\n        });\r\n        props.setDisplayNavbar(false);\r\n        props.setIsLoggedIn(false);\r\n    }\r\n    \r\n    return (\r\n        <div className={`${styles.navbar} ${props.displayNavbar && styles.displayNavbar}`}>\r\n            <AiOutlineClose className={styles.closeXButton} size={'1.5rem'} onClick={xbuttonClickHandler}/>\r\n            <ul>\r\n                <p onClick={booksOptionClickHandler}>Books</p>\r\n                <p onClick={authorsOptionClickHandler}>Authors</p>\r\n                <p onClick={genresOptionClickHandler}>Genres</p>\r\n            </ul>\r\n            <div id={styles.bottom_div}>\r\n                <p onClick={logoutOptionClickHandler}>Logout</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarOptions;","import React, { useState } from 'react';\r\nimport styles from './Login.module.css';\r\n\r\nconst Login = (props) => {\r\n    const [loginUsername, setLoginUsername] = useState();\r\n    const [loginPassword, setLoginPassword] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const [areValidationErrors, setAreValidationErrors] = useState(false);\r\n\r\n    function createNewUserClickHandler() {\r\n        props.setIsNewUser(true);\r\n    }\r\n\r\n    async function loginFormSubmitHandler(event) {\r\n        event.preventDefault();\r\n        let loginInfo = {\r\n            loginUsername: loginUsername,\r\n            loginPassword: loginPassword\r\n        }\r\n\r\n        if (loginUsername) {\r\n            loginInfo = {...loginInfo, escapedUsername: loginUsername.replaceAll('\\'', '\\\\\\'')}\r\n        }\r\n\r\n        const response = await fetch('users/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(loginInfo)\r\n        })\r\n        const data = await response.json();\r\n        if (typeof data === 'object') {\r\n            if (data.hasOwnProperty('errors')) {\r\n                setAreValidationErrors(true);\r\n                let errorMessages = data.errors.map(element => element.msg);\r\n                setValidationErrors(() => {\r\n                    return errorMessages.map(element => <li>{element}</li>);\r\n                });\r\n            } else {\r\n                props.sendLoggedInUserToApp(data);\r\n                props.setIsLoggedIn(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    function loginUsernameChangeHandler(event) {\r\n        setLoginUsername(event.target.value);\r\n    }\r\n\r\n    function loginPasswordChangeHandler(event) {\r\n        setLoginPassword(event.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.popup} data-cy='login_component'>\r\n            <div className={styles.popup_inner}>\r\n                {areValidationErrors && <ul>{validationErrors}</ul>}\r\n                <p>Please log in below</p>\r\n                <form className={styles.form} onSubmit={loginFormSubmitHandler}>\r\n                    <label>Username<input type='text' name='newuserUsername' value={loginUsername} onChange={loginUsernameChangeHandler}/></label>\r\n                    <label>Password<input type='password' name='newUserPassword' value={loginPassword} onChange={loginPasswordChangeHandler}/></label>\r\n                    <div id={styles.button_div}>\r\n                        <button type='submit'>Login</button>\r\n                    </div>\r\n                </form>\r\n                <a onClick={createNewUserClickHandler}>Create New User</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport styles from './NewUserSignup.module.css';\r\n\r\nconst NewUserSignup = (props) => {\r\n    const [newUserFirstName, setNewUserFirstName] = useState();\r\n    const [newUserLastName, setNewUserLastName] = useState();\r\n    const [newUserEmail, setNewUserEmail] = useState();\r\n    const [newUserUsername, setNewUserUsername] = useState();\r\n    const [newUserPassword, setNewUserPassword] = useState();\r\n    const [newUserConfirmedPassword, setNewUserConfirmedPassword] = useState();\r\n    const [validationErrors, setValidationErrors] = useState();\r\n    const [successfulSignup, setSuccessfulSignup] = useState(false);\r\n    const [passwordState, setPasswordState] = useState('password');\r\n    const [areValidationErrors, setAreValidationErrors] = useState(false);\r\n    \r\n    function backToLoginClickHandler() {\r\n        props.setIsNewUser(false);\r\n    }\r\n\r\n    function newUserFirstNameChangeHandler(event) {\r\n        setNewUserFirstName(event.target.value);\r\n    }\r\n\r\n    function newUserLastNameChangeHandler(event) {\r\n        setNewUserLastName(event.target.value);\r\n    }\r\n\r\n    function newUserEmailChangeHandler(event) {\r\n        setNewUserEmail(event.target.value);\r\n    }\r\n\r\n    function newUserPasswordChangeHandler(event) {\r\n        setNewUserPassword(event.target.value);\r\n    }\r\n\r\n    function newUserConfirmedPasswordChangeHandler(event) {\r\n        setNewUserConfirmedPassword(event.target.value);\r\n    }\r\n\r\n    function newUserUsernameChangeHandler(event) {\r\n        setNewUserUsername(event.target.value);\r\n    }\r\n\r\n    async function newUserSignupSubmitHandler(event) {\r\n        event.preventDefault();\r\n        let newUserInfo = {\r\n            newUserFirstName: newUserFirstName,\r\n            newUserLastName: newUserLastName,\r\n            newUserEmail: newUserEmail,\r\n            newUserUsername: newUserUsername,\r\n            newUserPassword: newUserPassword,\r\n            newUserConfirmedPassword: newUserConfirmedPassword\r\n        }\r\n\r\n        if (newUserFirstName) {\r\n            newUserInfo = {...newUserInfo, replacedNewUserFirstName: newUserFirstName.replaceAll('\\'', '\\\\\\'')}\r\n        }\r\n\r\n        if (newUserLastName) {\r\n            newUserInfo = {...newUserInfo, replacedNewUserLastName: newUserLastName.replaceAll('\\'', '\\\\\\'')}\r\n        }\r\n\r\n        if (newUserEmail) {\r\n            newUserInfo = {...newUserInfo, replacedNewUserEmail: newUserEmail.replaceAll('\\'', '\\\\\\'')}\r\n        }\r\n\r\n        if (newUserUsername) {\r\n            newUserInfo = {...newUserInfo, replacedNewUserUsername: newUserUsername.replaceAll('\\'', '\\\\\\'')}\r\n        }\r\n\r\n        const response = await fetch('users/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newUserInfo)\r\n        })\r\n\r\n        const data = await response.json();\r\n        if (typeof data === 'object') {\r\n            if (data.hasOwnProperty('errors')) {\r\n                setAreValidationErrors(true);\r\n                let errorMessages = data.errors.map(element => element.msg);\r\n                if (errorMessages.indexOf('SequelizeUniqueConstraintError') >= 0) {\r\n                    errorMessages.pop();\r\n                    if (data.errors[0].type === 'username') {\r\n                        errorMessages.push('That username already exists in the database. Please pick a different username.')\r\n                    }\r\n                    if (data.errors[0].type === 'email') {\r\n                        errorMessages.push('That email already exists in the database. Please pick a different email.')\r\n                    }\r\n                }\r\n                setValidationErrors(() => {\r\n                    return errorMessages.map(element => <li>{element}</li>);\r\n                });\r\n            } else {\r\n                setSuccessfulSignup(true);\r\n                setTimeout(() => {\r\n                    props.setIsNewUser(false);\r\n                }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    function passwordCheckboxChangeHandler() {\r\n        if (passwordState === 'password') {\r\n            setPasswordState('text')\r\n        } else {\r\n            setPasswordState('password');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.popup}>\r\n            {!successfulSignup &&\r\n            <div className={styles.popup_inner}>\r\n                {areValidationErrors && <ul>{validationErrors}</ul>}\r\n                <p>Please enter your information below:</p>\r\n                <form className={styles.form} onSubmit={newUserSignupSubmitHandler}>\r\n                    <label>First Name<input type='text' name='newuserFirstName' onChange={newUserFirstNameChangeHandler} value={newUserFirstName}/></label>\r\n                    <label>Last Name<input type='text' name='newUserLastName' onChange={newUserLastNameChangeHandler} value={newUserLastName}/></label>\r\n                    <label>Email<input type='text' name='newUserEmail' onChange={newUserEmailChangeHandler} value={newUserEmail}/></label>\r\n                    <label>Username<input type='text' name='newuserUsername' onChange={newUserUsernameChangeHandler} value={newUserUsername}/></label>\r\n                    <label>Password<input type={passwordState} name='newUserPassword' onChange={newUserPasswordChangeHandler} value={newUserPassword}/></label>\r\n                    <label>Confirm Password<input type={passwordState} name='newUserConfirmedPassword' onChange={newUserConfirmedPasswordChangeHandler} value={newUserConfirmedPassword}/></label>\r\n                    <div id={styles.show_password_checkbox}>\r\n                        <input type=\"checkbox\" id=\"showPasswordID\" name=\"showPasswordName\" onChange={passwordCheckboxChangeHandler}/>\r\n                        <label for=\"showPasswordID\">Show Password</label>\r\n                    </div>\r\n                    <div id={styles.button_div}>\r\n                        <button type='submit'>Create User</button>\r\n                    </div>\r\n                </form>\r\n                <a onClick={backToLoginClickHandler}>Back to Login</a>\r\n            </div>}\r\n            {successfulSignup && \r\n               <div className={styles.popup_inner}>\r\n                   <p data-cy=\"new_user_created\">New user created. Redirecting to login page...</p>\r\n               </div>  \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewUserSignup;","import { useEffect, useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport BookComponent from './components/book_components/BookComponent';\r\nimport AuthorComponent from './components/author_components/AuthorComponent';\r\nimport GenreComponent from './components/genre_components/GenreComponent';\r\nimport NavbarHeader from './components/NavbarHeader';\r\nimport NavbarOptions from './components/NavbarOptions';\r\nimport Login from './components/user_components/Login.js';\r\nimport NewUserSignup from './components/user_components/NewUserSignup.js';\r\nimport {AuthContext} from './context/auth-context';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nfunction App() {\r\n  const [displayBookComponent, setDisplayBookComponent] = useState(true);\r\n  const [displayAuthorComponent, setDisplayAuthorComponent] = useState(false);\r\n  const [displayGenreComponent, setDisplayGenreComponent] = useState(false);\r\n  const [displayNavbar, setDisplayNavbar] = useState(false);\r\n  const [isNewUser, setIsNewUser] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [displayUserInfoComponent, setDisplayUserInfoComponent] = useState(false);\r\n  const [token, setToken] = useState();\r\n  const [searchText, setSearchText] = useState();\r\n\r\n  function displayBookComponentFunction() {\r\n    setDisplayBookComponent(true);\r\n    setDisplayAuthorComponent(false);\r\n    setDisplayGenreComponent(false);\r\n    setDisplayUserInfoComponent(false);\r\n  }\r\n\r\n  function displayAuthorComponentFunction() {\r\n    setDisplayBookComponent(false);\r\n    setDisplayAuthorComponent(true);\r\n    setDisplayGenreComponent(false);\r\n    setDisplayUserInfoComponent(false);\r\n  }\r\n\r\n  function displayGenreComponentFunction() {\r\n    setDisplayBookComponent(false);\r\n    setDisplayAuthorComponent(false);\r\n    setDisplayGenreComponent(true);\r\n    setDisplayUserInfoComponent(false);\r\n  }\r\n\r\n  function displayUserInfoComponentFunction() {\r\n    setDisplayBookComponent(false);\r\n    setDisplayAuthorComponent(false);\r\n    setDisplayGenreComponent(false);\r\n    setDisplayUserInfoComponent(true);\r\n  }\r\n\r\n  function receiveLoggedInUserFromLogin(data) {\r\n    const token = data.accessToken;\r\n    setToken(token);\r\n  }\r\n\r\n  async function checkForTokenInCookies() {\r\n    const response = await fetch('users/checkcookies', {\r\n      method: 'POST'\r\n    });\r\n    const data = await response.json();\r\n    if (data.hasOwnProperty('success')) {\r\n      setToken(data.token);\r\n      setIsLoggedIn(true);\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkForTokenInCookies();\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.appClass}>\r\n        <MetaTags>\r\n          <meta name=\"viewport\" content=\"initial-scale=1.0\"/>\r\n        </MetaTags>\r\n        {!isLoggedIn && !isNewUser && (\r\n          <div>\r\n            <Login setIsNewUser={setIsNewUser} setIsLoggedIn={setIsLoggedIn} sendLoggedInUserToApp={receiveLoggedInUserFromLogin}/>\r\n          </div>\r\n        )}\r\n        {!isLoggedIn && isNewUser && (\r\n          <NewUserSignup setIsNewUser={setIsNewUser}/>\r\n        )}\r\n        {isLoggedIn && (\r\n          <div>\r\n            <AuthContext.Provider value={{\r\n                token: token,\r\n                setIsLoggedIn: setIsLoggedIn,\r\n                searchText: searchText\r\n                }}>\r\n              <NavbarHeader setDisplayNavbar={setDisplayNavbar} setSearchText={setSearchText}/>\r\n              <NavbarOptions displayNavbar={displayNavbar} setDisplayNavbar={setDisplayNavbar} displayBookComponentFunction={displayBookComponentFunction} displayAuthorComponentFunction={displayAuthorComponentFunction} displayGenreComponentFunction={displayGenreComponentFunction} displayUserInfoComponentFunction={displayUserInfoComponentFunction} setIsLoggedIn={setIsLoggedIn}/>\r\n              {displayBookComponent && !displayAuthorComponent && !displayGenreComponent && !displayUserInfoComponent && <BookComponent/>}\r\n              {!displayBookComponent && displayAuthorComponent && !displayGenreComponent && !displayUserInfoComponent &&<AuthorComponent />}\r\n              {!displayBookComponent && !displayAuthorComponent && displayGenreComponent && !displayUserInfoComponent &&<GenreComponent />}\r\n            </AuthContext.Provider>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}